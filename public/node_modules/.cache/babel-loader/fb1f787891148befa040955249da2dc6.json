{"ast":null,"code":"import { useState, useEffect } from 'react';\n\nconst useFetchData = (from, to) => {\n  const [fromRate, setFromRate] = useState(null);\n  const [toRate, setToRate] = useState(null);\n  useEffect(() => {\n    const fetchData = async () => {\n      const url = `https://openexchangerates.org/api/latest.json?app_id=81fa12e332b74f45a1de4a276db7c0d1&base=${from}`;\n      const response = await fetch(url);\n      const data = await response.json();\n      setFromRate(from);\n      setToRate(data.rates[to]);\n    };\n\n    fetchData();\n  }, [from, to]);\n  return [fromRate, toRate];\n};\n\nexport default useFetchData;","map":{"version":3,"sources":["/Users/andreu/Documents/Revolut/react-currency-exchange-widget/src/hooks/useFetchData.js"],"names":["useState","useEffect","useFetchData","from","to","fromRate","setFromRate","toRate","setToRate","fetchData","url","response","fetch","data","json","rates"],"mappings":"AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;;AAEA,MAAMC,YAAY,GAAG,CAACC,IAAD,EAAOC,EAAP,KAAc;AACjC,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BN,QAAQ,CAAC,IAAD,CAAxC;AACA,QAAM,CAACO,MAAD,EAASC,SAAT,IAAsBR,QAAQ,CAAC,IAAD,CAApC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMQ,SAAS,GAAG,YAAY;AAC5B,YAAMC,GAAG,GAAI,8FAA6FP,IAAK,EAA/G;AACA,YAAMQ,QAAQ,GAAG,MAAMC,KAAK,CAACF,GAAD,CAA5B;AACA,YAAMG,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAAnB;AAEAR,MAAAA,WAAW,CAACH,IAAD,CAAX;AACAK,MAAAA,SAAS,CAACK,IAAI,CAACE,KAAL,CAAWX,EAAX,CAAD,CAAT;AACD,KAPD;;AASAK,IAAAA,SAAS;AACV,GAXQ,EAWN,CAACN,IAAD,EAAOC,EAAP,CAXM,CAAT;AAaA,SAAO,CAACC,QAAD,EAAWE,MAAX,CAAP;AACD,CAlBD;;AAoBA,eAAeL,YAAf","sourcesContent":["import { useState, useEffect } from 'react';\n\nconst useFetchData = (from, to) => {\n  const [fromRate, setFromRate] = useState(null);\n  const [toRate, setToRate] = useState(null);\n\n  useEffect(() => {\n    const fetchData = async () => {\n      const url = `https://openexchangerates.org/api/latest.json?app_id=81fa12e332b74f45a1de4a276db7c0d1&base=${from}`;\n      const response = await fetch(url);\n      const data = await response.json();\n\n      setFromRate(from);\n      setToRate(data.rates[to]);\n    };\n\n    fetchData();\n  }, [from, to]);\n\n  return [fromRate, toRate];\n};\n\nexport default useFetchData;\n"]},"metadata":{},"sourceType":"module"}