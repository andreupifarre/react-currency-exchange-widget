{"ast":null,"code":"var _jsxFileName = \"/Users/andreu/Documents/Revolut/react-currency-exchange-widget/src/components/Exchanger/Exchanger.js\";\nimport React, { useState, useEffect } from 'react';\nimport classNames from 'classnames';\nimport useInterval from '../../hooks/useInterval'; // import useFetchRates from '../../hooks/useFetchRates';\n\nimport ExchangerRow from '../ExchangerRow/ExchangerRow';\nimport ExchangerBar from '../ExchangerBar/ExchangerBar';\nimport './Exchanger.scss';\nconst DEFAULT_FROM_CURRENCY = 'GBP';\nconst DEFAULT_TO_CURRENCY = 'EUR';\nconst EXCHANGE_FEE = 0.005;\nconst MIMIMUM_AMOUNT = 0.1;\nconst ALLOWANCE_LIMIT = 1000;\nconst FETCH_INTERVAL = 10000000; //10000;\n\nconst BALANCES = [{\n  code: 'GBP',\n  balance: '10',\n  sign: '£'\n}, {\n  code: 'EUR',\n  balance: '0',\n  sign: '€'\n}, {\n  code: 'USD',\n  balance: '0',\n  sign: '$'\n}];\n\nconst Exchanger = () => {\n  const [fromCurrency, setFromCurrency] = useState(DEFAULT_FROM_CURRENCY);\n  const [toCurrency, setToCurrency] = useState(DEFAULT_TO_CURRENCY);\n  const interval = useInterval(FETCH_INTERVAL);\n  const [rates, setRates] = useState(null);\n  const [fromAmount, setFromAmount] = useState();\n  const [toAmount, setToAmount] = useState();\n  const [isExceeding, setIsExceeding] = useState(true);\n  const [fromInfo, setFromInfo] = useState('');\n  const [toInfo, setToInfo] = useState('');\n  const [currencies, setCurrencies] = useState(BALANCES);\n  const selectedFromCurrency = currencies.find(c => c.code === fromCurrency);\n  const selectedToCurrency = currencies.find(c => c.code === toCurrency);\n\n  const convertFromTo = (currency, amount) => {\n    if (!rates) return '';\n    const conversion = ((amount || 0) * rates[currency]).toFixed(2); // eslint-disable-next-line\n\n    return conversion == 0 ? '' : conversion;\n  };\n\n  const convertToFrom = (currency, amount) => {\n    if (!rates) return '';\n    const conversion = ((amount || 0) / rates[currency]).toFixed(2); // eslint-disable-next-line\n\n    return conversion == 0 ? '' : conversion;\n  }; // const formatRate = (amount) =>\n  //   rates && rates[toCurrency] && parseFloat(rates[toCurrency].toFixed(4));\n\n\n  const calculate = (amount, currency) => {\n    const floatAmount = parseFloat(amount);\n    const fee = (floatAmount * EXCHANGE_FEE).toFixed(2);\n    const isAmountExceeding = floatAmount > parseFloat(currency.balance);\n    const isMinAmountReached = !amount || floatAmount >= MIMIMUM_AMOUNT;\n    const isFeeInvolved = floatAmount > ALLOWANCE_LIMIT;\n    const isAllowedToExchange = isAmountExceeding || !isMinAmountReached || !amount;\n    const feeInfo = `Fee: ${currency.sign}${fee}`;\n    const exceedInfo = 'exceeds balance';\n    const minInfo = `minimum amount is ${currency.sign}${MIMIMUM_AMOUNT.toFixed(2)}`;\n    const toInfo = isFeeInvolved ? feeInfo : '';\n    const fromInfo = !isMinAmountReached ? minInfo : isAmountExceeding ? exceedInfo : '';\n    setIsExceeding(isAllowedToExchange);\n    setFromInfo(fromInfo);\n    setToInfo(toInfo);\n  };\n\n  const handleSwap = () => {\n    setFromCurrency(toCurrency);\n    setToCurrency(fromCurrency);\n    setFromAmount(toAmount);\n    setToAmount(fromAmount);\n    calculate(toAmount, selectedToCurrency);\n  };\n\n  const handleFromCurrencyChange = currency => {\n    if (currency === toCurrency) {\n      setToCurrency(fromCurrency);\n      calculate(toAmount, selectedToCurrency);\n    }\n\n    setFromCurrency(currency);\n  };\n\n  const handleToCurrencyChange = currency => {\n    if (currency === fromCurrency) {\n      setFromCurrency(toCurrency);\n      calculate(toAmount, selectedToCurrency);\n    }\n\n    setToCurrency(currency);\n    setToAmount(convertFromTo(currency, fromAmount));\n  };\n\n  const handleFromAmountChange = amount => {\n    setFromAmount(amount);\n    setToAmount(convertFromTo(toCurrency, amount));\n    calculate(amount, selectedFromCurrency);\n  };\n\n  const handleToAmountChange = amount => {\n    setToAmount(amount);\n    setFromAmount(convertToFrom(toCurrency, amount));\n    calculate(amount, selectedFromCurrency);\n  };\n\n  const handleExchange = () => {\n    const newCurrencies = currencies.map(item => {\n      if (item.code === fromCurrency) {\n        const newBalance = parseFloat(item.balance) - parseFloat(fromAmount);\n        return { ...item,\n          balance: newBalance.toFixed(2)\n        };\n      } else if (item.code === toCurrency) {\n        const newBalance = parseFloat(item.balance) + parseFloat(toAmount);\n        return { ...item,\n          balance: newBalance.toFixed(2)\n        };\n      } else {\n        return item;\n      }\n    });\n    setCurrencies(newCurrencies);\n    setFromAmount();\n    setToAmount();\n    setIsExceeding(false);\n  };\n\n  useEffect(() => {\n    const fetchData = async () => {\n      const url = `https://openexchangerates.org/api/latest.json?app_id=81fa12e332b74f45a1de4a276db7c0d1&base=${fromCurrency}`;\n      const response = await fetch(url);\n      const data = await response.json();\n      setRates(data.rates);\n    };\n\n    fetchData();\n  }, [fromCurrency, interval]);\n  useEffect(() => {\n    setToAmount(convertFromTo(toCurrency, fromAmount)); // eslint-disable-next-line\n  }, [rates]);\n  return React.createElement(\"div\", {\n    className: \"exchanger\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"exchanger__row\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157\n    },\n    __self: this\n  }, React.createElement(ExchangerRow, {\n    balance: selectedFromCurrency.balance,\n    currency: selectedFromCurrency.code,\n    sign: selectedFromCurrency.sign,\n    amount: fromAmount,\n    info: fromInfo,\n    currencies: currencies,\n    onAmountChange: handleFromAmountChange,\n    onCurrencyChange: handleFromCurrencyChange,\n    autoFocus: true,\n    alt: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"exchanger__bar\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171\n    },\n    __self: this\n  }, React.createElement(ExchangerBar, {\n    onSwap: handleSwap,\n    fromSign: selectedFromCurrency.sign,\n    toSign: selectedToCurrency.sign,\n    rate: rates && rates[toCurrency],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"exchanger__row\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179\n    },\n    __self: this\n  }, React.createElement(ExchangerRow, {\n    balance: selectedToCurrency.balance,\n    currency: selectedToCurrency.code,\n    sign: selectedToCurrency.sign,\n    amount: toAmount,\n    info: toInfo,\n    currencies: currencies,\n    onAmountChange: handleToAmountChange,\n    onCurrencyChange: handleToCurrencyChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 180\n    },\n    __self: this\n  })), React.createElement(\"button\", {\n    className: classNames('exchanger__submit-button', {\n      'exchanger__submit-button--enabled': !isExceeding\n    }),\n    disabled: isExceeding,\n    type: \"button\",\n    onClick: handleExchange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 191\n    },\n    __self: this\n  }, \"Exchange\"));\n};\n\nExchanger.whyDidYouRender = {// logOnDifferentValues: true,\n};\nexport default Exchanger;","map":{"version":3,"sources":["/Users/andreu/Documents/Revolut/react-currency-exchange-widget/src/components/Exchanger/Exchanger.js"],"names":["React","useState","useEffect","classNames","useInterval","ExchangerRow","ExchangerBar","DEFAULT_FROM_CURRENCY","DEFAULT_TO_CURRENCY","EXCHANGE_FEE","MIMIMUM_AMOUNT","ALLOWANCE_LIMIT","FETCH_INTERVAL","BALANCES","code","balance","sign","Exchanger","fromCurrency","setFromCurrency","toCurrency","setToCurrency","interval","rates","setRates","fromAmount","setFromAmount","toAmount","setToAmount","isExceeding","setIsExceeding","fromInfo","setFromInfo","toInfo","setToInfo","currencies","setCurrencies","selectedFromCurrency","find","c","selectedToCurrency","convertFromTo","currency","amount","conversion","toFixed","convertToFrom","calculate","floatAmount","parseFloat","fee","isAmountExceeding","isMinAmountReached","isFeeInvolved","isAllowedToExchange","feeInfo","exceedInfo","minInfo","handleSwap","handleFromCurrencyChange","handleToCurrencyChange","handleFromAmountChange","handleToAmountChange","handleExchange","newCurrencies","map","item","newBalance","fetchData","url","response","fetch","data","json","whyDidYouRender"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport classNames from 'classnames';\nimport useInterval from '../../hooks/useInterval';\n// import useFetchRates from '../../hooks/useFetchRates';\nimport ExchangerRow from '../ExchangerRow/ExchangerRow';\nimport ExchangerBar from '../ExchangerBar/ExchangerBar';\n\nimport './Exchanger.scss';\n\nconst DEFAULT_FROM_CURRENCY = 'GBP';\nconst DEFAULT_TO_CURRENCY = 'EUR';\nconst EXCHANGE_FEE = 0.005;\nconst MIMIMUM_AMOUNT = 0.1;\nconst ALLOWANCE_LIMIT = 1000;\nconst FETCH_INTERVAL = 10000000; //10000;\nconst BALANCES = [\n  { code: 'GBP', balance: '10', sign: '£' },\n  { code: 'EUR', balance: '0', sign: '€' },\n  { code: 'USD', balance: '0', sign: '$' },\n];\n\nconst Exchanger = () => {\n  const [fromCurrency, setFromCurrency] = useState(DEFAULT_FROM_CURRENCY);\n  const [toCurrency, setToCurrency] = useState(DEFAULT_TO_CURRENCY);\n  const interval = useInterval(FETCH_INTERVAL);\n  const [rates, setRates] = useState(null);\n  const [fromAmount, setFromAmount] = useState();\n  const [toAmount, setToAmount] = useState();\n  const [isExceeding, setIsExceeding] = useState(true);\n  const [fromInfo, setFromInfo] = useState('');\n  const [toInfo, setToInfo] = useState('');\n  const [currencies, setCurrencies] = useState(BALANCES);\n\n  const selectedFromCurrency = currencies.find((c) => c.code === fromCurrency);\n  const selectedToCurrency = currencies.find((c) => c.code === toCurrency);\n\n  const convertFromTo = (currency, amount) => {\n    if (!rates) return '';\n\n    const conversion = ((amount || 0) * rates[currency]).toFixed(2);\n    // eslint-disable-next-line\n    return conversion == 0 ? '' : conversion;\n  };\n\n  const convertToFrom = (currency, amount) => {\n    if (!rates) return '';\n\n    const conversion = ((amount || 0) / rates[currency]).toFixed(2);\n    // eslint-disable-next-line\n    return conversion == 0 ? '' : conversion;\n  };\n\n  // const formatRate = (amount) =>\n  //   rates && rates[toCurrency] && parseFloat(rates[toCurrency].toFixed(4));\n\n  const calculate = (amount, currency) => {\n    const floatAmount = parseFloat(amount);\n    const fee = (floatAmount * EXCHANGE_FEE).toFixed(2);\n    const isAmountExceeding = floatAmount > parseFloat(currency.balance);\n    const isMinAmountReached = !amount || floatAmount >= MIMIMUM_AMOUNT;\n    const isFeeInvolved = floatAmount > ALLOWANCE_LIMIT;\n    const isAllowedToExchange =\n      isAmountExceeding || !isMinAmountReached || !amount;\n    const feeInfo = `Fee: ${currency.sign}${fee}`;\n    const exceedInfo = 'exceeds balance';\n    const minInfo = `minimum amount is ${currency.sign}${MIMIMUM_AMOUNT.toFixed(\n      2,\n    )}`;\n    const toInfo = isFeeInvolved ? feeInfo : '';\n    const fromInfo = !isMinAmountReached\n      ? minInfo\n      : isAmountExceeding\n      ? exceedInfo\n      : '';\n\n    setIsExceeding(isAllowedToExchange);\n    setFromInfo(fromInfo);\n    setToInfo(toInfo);\n  };\n\n  const handleSwap = () => {\n    setFromCurrency(toCurrency);\n    setToCurrency(fromCurrency);\n    setFromAmount(toAmount);\n    setToAmount(fromAmount);\n    calculate(toAmount, selectedToCurrency);\n  };\n\n  const handleFromCurrencyChange = (currency) => {\n    if (currency === toCurrency) {\n      setToCurrency(fromCurrency);\n      calculate(toAmount, selectedToCurrency);\n    }\n\n    setFromCurrency(currency);\n  };\n\n  const handleToCurrencyChange = (currency) => {\n    if (currency === fromCurrency) {\n      setFromCurrency(toCurrency);\n      calculate(toAmount, selectedToCurrency);\n    }\n\n    setToCurrency(currency);\n    setToAmount(convertFromTo(currency, fromAmount));\n  };\n\n  const handleFromAmountChange = (amount) => {\n    setFromAmount(amount);\n    setToAmount(convertFromTo(toCurrency, amount));\n    calculate(amount, selectedFromCurrency);\n  };\n\n  const handleToAmountChange = (amount) => {\n    setToAmount(amount);\n    setFromAmount(convertToFrom(toCurrency, amount));\n    calculate(amount, selectedFromCurrency);\n  };\n\n  const handleExchange = () => {\n    const newCurrencies = currencies.map((item) => {\n      if (item.code === fromCurrency) {\n        const newBalance = parseFloat(item.balance) - parseFloat(fromAmount);\n        return { ...item, balance: newBalance.toFixed(2) };\n      } else if (item.code === toCurrency) {\n        const newBalance = parseFloat(item.balance) + parseFloat(toAmount);\n        return { ...item, balance: newBalance.toFixed(2) };\n      } else {\n        return item;\n      }\n    });\n\n    setCurrencies(newCurrencies);\n    setFromAmount();\n    setToAmount();\n    setIsExceeding(false);\n  };\n\n  useEffect(() => {\n    const fetchData = async () => {\n      const url = `https://openexchangerates.org/api/latest.json?app_id=81fa12e332b74f45a1de4a276db7c0d1&base=${fromCurrency}`;\n      const response = await fetch(url);\n      const data = await response.json();\n      setRates(data.rates);\n    };\n\n    fetchData();\n  }, [fromCurrency, interval]);\n\n  useEffect(() => {\n    setToAmount(convertFromTo(toCurrency, fromAmount));\n    // eslint-disable-next-line\n  }, [rates]);\n\n  return (\n    <div className=\"exchanger\">\n      <div className=\"exchanger__row\">\n        <ExchangerRow\n          balance={selectedFromCurrency.balance}\n          currency={selectedFromCurrency.code}\n          sign={selectedFromCurrency.sign}\n          amount={fromAmount}\n          info={fromInfo}\n          currencies={currencies}\n          onAmountChange={handleFromAmountChange}\n          onCurrencyChange={handleFromCurrencyChange}\n          autoFocus\n          alt\n        />\n      </div>\n      <div className=\"exchanger__bar\">\n        <ExchangerBar\n          onSwap={handleSwap}\n          fromSign={selectedFromCurrency.sign}\n          toSign={selectedToCurrency.sign}\n          rate={rates && rates[toCurrency]}\n        />\n      </div>\n      <div className=\"exchanger__row\">\n        <ExchangerRow\n          balance={selectedToCurrency.balance}\n          currency={selectedToCurrency.code}\n          sign={selectedToCurrency.sign}\n          amount={toAmount}\n          info={toInfo}\n          currencies={currencies}\n          onAmountChange={handleToAmountChange}\n          onCurrencyChange={handleToCurrencyChange}\n        />\n      </div>\n      <button\n        className={classNames('exchanger__submit-button', {\n          'exchanger__submit-button--enabled': !isExceeding,\n        })}\n        disabled={isExceeding}\n        type=\"button\"\n        onClick={handleExchange}\n      >\n        Exchange\n      </button>\n    </div>\n  );\n};\n\nExchanger.whyDidYouRender = {\n  // logOnDifferentValues: true,\n};\n\nexport default Exchanger;\n"]},"metadata":{},"sourceType":"module"}