{"ast":null,"code":"var _jsxFileName = \"/Users/andreu/Documents/Revolut/react-currency-exchange-widget/src/components/Exchanger/Exchanger.js\";\nimport React, { useState } from 'react';\nimport useDebounce from '../../hooks/useDebounce';\nimport useFetchData from '../../hooks/useFetchData';\nimport SearchList from '../SearchList/SearchList';\nimport './SearchField.scss';\n\nconst SearchField = () => {\n  const [searchText, setSearchText] = useState('');\n  const [showList, setShowList] = useState(false);\n  const [locations, noResults] = useFetchData(useDebounce(searchText));\n  return React.createElement(\"div\", {\n    className: \"c-search-field\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    htmlFor: \"c-search-input\",\n    className: \"c-search-field__label\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14\n    },\n    __self: this\n  }, \"Pick-up Location\"), React.createElement(\"input\", {\n    id: \"c-search-input\",\n    type: \"text\",\n    className: \"c-search-field__input\",\n    autoComplete: \"off\",\n    placeholder: \"city, airport, station, region, district\\u2026\",\n    \"aria-required\": \"true\",\n    \"aria-autocomplete\": \"list\",\n    \"aria-haspopup\": \"true\",\n    onChange: e => setSearchText(e.target.value),\n    onBlur: () => setShowList(false),\n    onFocus: () => setShowList(true),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }), showList && React.createElement(SearchList, {\n    locations: locations,\n    noResults: noResults,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }));\n};\n\nexport default SearchField;","map":{"version":3,"sources":["/Users/andreu/Documents/Revolut/react-currency-exchange-widget/src/components/Exchanger/Exchanger.js"],"names":["React","useState","useDebounce","useFetchData","SearchList","SearchField","searchText","setSearchText","showList","setShowList","locations","noResults","e","target","value"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,WAAP,MAAwB,yBAAxB;AACA,OAAOC,YAAP,MAAyB,0BAAzB;AACA,OAAOC,UAAP,MAAuB,0BAAvB;AACA,OAAO,oBAAP;;AAEA,MAAMC,WAAW,GAAG,MAAM;AACxB,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BN,QAAQ,CAAC,EAAD,CAA5C;AACA,QAAM,CAACO,QAAD,EAAWC,WAAX,IAA0BR,QAAQ,CAAC,KAAD,CAAxC;AACA,QAAM,CAACS,SAAD,EAAYC,SAAZ,IAAyBR,YAAY,CAACD,WAAW,CAACI,UAAD,CAAZ,CAA3C;AAEA,SACE;AAAK,IAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAO,IAAA,OAAO,EAAC,gBAAf;AAAgC,IAAA,SAAS,EAAC,uBAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADF,EAIE;AACE,IAAA,EAAE,EAAC,gBADL;AAEE,IAAA,IAAI,EAAC,MAFP;AAGE,IAAA,SAAS,EAAC,uBAHZ;AAIE,IAAA,YAAY,EAAC,KAJf;AAKE,IAAA,WAAW,EAAC,gDALd;AAME,qBAAc,MANhB;AAOE,yBAAkB,MAPpB;AAQE,qBAAc,MARhB;AASE,IAAA,QAAQ,EAAEM,CAAC,IAAIL,aAAa,CAACK,CAAC,CAACC,MAAF,CAASC,KAAV,CAT9B;AAUE,IAAA,MAAM,EAAE,MAAML,WAAW,CAAC,KAAD,CAV3B;AAWE,IAAA,OAAO,EAAE,MAAMA,WAAW,CAAC,IAAD,CAX5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJF,EAiBGD,QAAQ,IAAI,oBAAC,UAAD;AAAY,IAAA,SAAS,EAAEE,SAAvB;AAAkC,IAAA,SAAS,EAAEC,SAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAjBf,CADF;AAqBD,CA1BD;;AA4BA,eAAeN,WAAf","sourcesContent":["import React, { useState } from 'react';\nimport useDebounce from '../../hooks/useDebounce';\nimport useFetchData from '../../hooks/useFetchData';\nimport SearchList from '../SearchList/SearchList';\nimport './SearchField.scss';\n\nconst SearchField = () => {\n  const [searchText, setSearchText] = useState('');\n  const [showList, setShowList] = useState(false);\n  const [locations, noResults] = useFetchData(useDebounce(searchText));\n\n  return (\n    <div className=\"c-search-field\">\n      <label htmlFor=\"c-search-input\" className=\"c-search-field__label\">\n        Pick-up Location\n      </label>\n      <input\n        id=\"c-search-input\"\n        type=\"text\"\n        className=\"c-search-field__input\"\n        autoComplete=\"off\"\n        placeholder=\"city, airport, station, region, districtâ€¦\"\n        aria-required=\"true\"\n        aria-autocomplete=\"list\"\n        aria-haspopup=\"true\"\n        onChange={e => setSearchText(e.target.value)}\n        onBlur={() => setShowList(false)}\n        onFocus={() => setShowList(true)}\n      />\n      {showList && <SearchList locations={locations} noResults={noResults} />}\n    </div>\n  );\n};\n\nexport default SearchField;\n"]},"metadata":{},"sourceType":"module"}