{"ast":null,"code":"var _jsxFileName = \"/Users/andreu/Documents/Revolut/react-currency-exchange-widget/src/components/CurrencyDropdown/CurrencyDropdown.js\";\nimport React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport './CurrencyDropdown.scss';\n\nconst CurrencyDropdown = ({\n  currencies,\n  setCurrency\n}) => {\n  const [shown, setShown] = useState(false);\n  const [selectedItem, setSelectedItem] = useState(0);\n\n  const handleClick = item => {\n    setSelectedItem(item);\n    setShown(false);\n    console.log(currencies[item]);\n    setCurrency(currencies[item]);\n  };\n\n  return React.createElement(\"div\", {\n    className: \"currency-dropdown\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    className: \"currency-dropdown__button\",\n    onClick: () => setShown(!shown),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }, \"GBP\"), React.createElement(\"ul\", {\n    className: classNames('currency-dropdown__list', {\n      'currency-dropdown__list--shown': shown\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }, currencies.map((c, i) => React.createElement(\"li\", {\n    key: c.code,\n    className: classNames('currency-dropdown__item', {\n      'currency-dropdown__item--active': selectedItem === i\n    }),\n    onClick: () => handleClick(i),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, c.code, \" \\u2022 \", c.balance))));\n};\n\nexport default CurrencyDropdown;\nCurrencyDropdown.defaultProps = {\n  currencies: [],\n  setCurrency: () => {}\n};\nCurrencyDropdown.propTypes = {\n  currencies: PropTypes.array.isRequired,\n  setCurrency: PropTypes.func.isRequired\n};","map":{"version":3,"sources":["/Users/andreu/Documents/Revolut/react-currency-exchange-widget/src/components/CurrencyDropdown/CurrencyDropdown.js"],"names":["React","useState","PropTypes","classNames","CurrencyDropdown","currencies","setCurrency","shown","setShown","selectedItem","setSelectedItem","handleClick","item","console","log","map","c","i","code","balance","defaultProps","propTypes","array","isRequired","func"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,UAAP,MAAuB,YAAvB;AACA,OAAO,yBAAP;;AAEA,MAAMC,gBAAgB,GAAG,CAAC;AAAEC,EAAAA,UAAF;AAAcC,EAAAA;AAAd,CAAD,KAAiC;AACxD,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBP,QAAQ,CAAC,KAAD,CAAlC;AACA,QAAM,CAACQ,YAAD,EAAeC,eAAf,IAAkCT,QAAQ,CAAC,CAAD,CAAhD;;AAEA,QAAMU,WAAW,GAAIC,IAAD,IAAU;AAC5BF,IAAAA,eAAe,CAACE,IAAD,CAAf;AACAJ,IAAAA,QAAQ,CAAC,KAAD,CAAR;AACAK,IAAAA,OAAO,CAACC,GAAR,CAAYT,UAAU,CAACO,IAAD,CAAtB;AACAN,IAAAA,WAAW,CAACD,UAAU,CAACO,IAAD,CAAX,CAAX;AACD,GALD;;AAOA,SACE;AAAK,IAAA,SAAS,EAAC,mBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AACE,IAAA,SAAS,EAAC,2BADZ;AAEE,IAAA,OAAO,EAAE,MAAMJ,QAAQ,CAAC,CAACD,KAAF,CAFzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WADF,EAOE;AACE,IAAA,SAAS,EAAEJ,UAAU,CAAC,yBAAD,EAA4B;AAC/C,wCAAkCI;AADa,KAA5B,CADvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAKGF,UAAU,CAACU,GAAX,CAAe,CAACC,CAAD,EAAIC,CAAJ,KACd;AACE,IAAA,GAAG,EAAED,CAAC,CAACE,IADT;AAEE,IAAA,SAAS,EAAEf,UAAU,CAAC,yBAAD,EAA4B;AAC/C,yCAAmCM,YAAY,KAAKQ;AADL,KAA5B,CAFvB;AAKE,IAAA,OAAO,EAAE,MAAMN,WAAW,CAACM,CAAD,CAL5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAOGD,CAAC,CAACE,IAPL,cAOcF,CAAC,CAACG,OAPhB,CADD,CALH,CAPF,CADF;AA2BD,CAtCD;;AAwCA,eAAef,gBAAf;AAEAA,gBAAgB,CAACgB,YAAjB,GAAgC;AAC9Bf,EAAAA,UAAU,EAAE,EADkB;AAE9BC,EAAAA,WAAW,EAAE,MAAM,CAAE;AAFS,CAAhC;AAKAF,gBAAgB,CAACiB,SAAjB,GAA6B;AAC3BhB,EAAAA,UAAU,EAAEH,SAAS,CAACoB,KAAV,CAAgBC,UADD;AAE3BjB,EAAAA,WAAW,EAAEJ,SAAS,CAACsB,IAAV,CAAeD;AAFD,CAA7B","sourcesContent":["import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport './CurrencyDropdown.scss';\n\nconst CurrencyDropdown = ({ currencies, setCurrency }) => {\n  const [shown, setShown] = useState(false);\n  const [selectedItem, setSelectedItem] = useState(0);\n\n  const handleClick = (item) => {\n    setSelectedItem(item);\n    setShown(false);\n    console.log(currencies[item]);\n    setCurrency(currencies[item]);\n  };\n\n  return (\n    <div className=\"currency-dropdown\">\n      <span\n        className=\"currency-dropdown__button\"\n        onClick={() => setShown(!shown)}\n      >\n        GBP\n      </span>\n      <ul\n        className={classNames('currency-dropdown__list', {\n          'currency-dropdown__list--shown': shown,\n        })}\n      >\n        {currencies.map((c, i) => (\n          <li\n            key={c.code}\n            className={classNames('currency-dropdown__item', {\n              'currency-dropdown__item--active': selectedItem === i,\n            })}\n            onClick={() => handleClick(i)}\n          >\n            {c.code} â€¢ {c.balance}\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default CurrencyDropdown;\n\nCurrencyDropdown.defaultProps = {\n  currencies: [],\n  setCurrency: () => {},\n};\n\nCurrencyDropdown.propTypes = {\n  currencies: PropTypes.array.isRequired,\n  setCurrency: PropTypes.func.isRequired,\n};\n"]},"metadata":{},"sourceType":"module"}