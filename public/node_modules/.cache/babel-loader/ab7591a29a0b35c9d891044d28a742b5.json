{"ast":null,"code":"var _jsxFileName = \"/Users/andreu/Documents/Revolut/react-currency-exchange-widget/src/components/Exchanger/Exchanger.js\";\nimport React, { useState, useEffect } from 'react';\nimport classNames from 'classnames';\nimport useInterval from '../../hooks/useInterval'; // import useFetchRates from '../../hooks/useFetchRates';\n\nimport ExchangerRow from '../ExchangerRow/ExchangerRow';\nimport './Exchanger.scss';\nconst DEFAULT_FROM_CURRENCY = 'GBP';\nconst DEFAULT_TO_CURRENCY = 'EUR';\nconst EXCHANGE_FEE = 0.005;\nconst MIMIMUM_AMOUNT = 0.1;\nconst ALLOWANCE_LIMIT = 1000;\n\nconst Exchanger = () => {\n  const [fromCurrency, setFromCurrency] = useState(DEFAULT_FROM_CURRENCY);\n  const [toCurrency, setToCurrency] = useState(DEFAULT_TO_CURRENCY);\n  const interval = useInterval(10000);\n  const [rates, setRates] = useState(null);\n  const [fromAmount, setFromAmount] = useState();\n  const [toAmount, setToAmount] = useState();\n  const [isExceeding, setIsExceeding] = useState(true);\n  const [fromInfo, setFromInfo] = useState('');\n  const [toInfo, setToInfo] = useState('');\n  const [currencies, setCurrencies] = useState([{\n    code: 'GBP',\n    balance: '10',\n    sign: '£'\n  }, {\n    code: 'EUR',\n    balance: '0',\n    sign: '€'\n  }, {\n    code: 'USD',\n    balance: '0',\n    sign: '$'\n  }]);\n  const selectedFromCurrency = currencies.find(c => c.code === fromCurrency);\n  const selectedToCurrency = currencies.find(c => c.code === toCurrency);\n\n  const convertFromTo = (currency, amount) => {\n    if (!rates) return '';\n    const conversion = ((amount || 0) * rates[currency]).toFixed(2); // eslint-disable-next-line\n\n    return conversion == 0 ? '' : conversion;\n  };\n\n  const convertToFrom = (currency, amount) => {\n    if (!rates) return '';\n    const conversion = ((amount || 0) / rates[currency]).toFixed(2); // eslint-disable-next-line\n\n    return conversion == 0 ? '' : conversion;\n  };\n\n  const formatRate = rates && rates[toCurrency] ? parseFloat(rates[toCurrency].toFixed(4)) : null;\n\n  const calculate = amount => {\n    const floatAmount = parseFloat(amount);\n    const fee = (floatAmount * EXCHANGE_FEE).toFixed(2);\n    const isAmountExceeding = floatAmount > selectedFromCurrency.balance;\n    const isMinAmountReached = !amount || floatAmount >= MIMIMUM_AMOUNT;\n    const isFeeInvolved = floatAmount > ALLOWANCE_LIMIT;\n    const isAllowedToExchange = isAmountExceeding || !isMinAmountReached || !amount;\n    const feeInfo = `Fee: ${selectedFromCurrency.sign}${fee}`;\n    const exceedInfo = 'exceeds balance';\n    const minInfo = `minimum amount is ${selectedFromCurrency.sign}${MIMIMUM_AMOUNT.toFixed(2)}`;\n    setIsExceeding(isAllowedToExchange);\n    !isMinAmountReached ? setFromInfo(minInfo) : setFromInfo(isAmountExceeding ? exceedInfo : '');\n    setToInfo(isFeeInvolved ? feeInfo : '');\n  };\n\n  const handleSwap = () => {\n    setFromCurrency(toCurrency);\n    setToCurrency(fromCurrency);\n    setFromAmount(toAmount);\n    setToAmount(fromAmount);\n    calculate(toAmount);\n  };\n\n  const handleFromCurrencyChange = currency => {\n    if (currency === toCurrency) {\n      setToCurrency(fromCurrency);\n    }\n\n    setFromCurrency(currency);\n  };\n\n  const handleToCurrencyChange = currency => {\n    if (currency === fromCurrency) {\n      setFromCurrency(toCurrency);\n    }\n\n    setToCurrency(currency);\n    setToAmount(convertFromTo(currency, fromAmount));\n  };\n\n  const handleFromAmountChange = amount => {\n    setFromAmount(amount);\n    setToAmount(convertFromTo(toCurrency, amount));\n    calculate(amount);\n  };\n\n  const handleToAmountChange = amount => {\n    setToAmount(amount);\n    setFromAmount(convertToFrom(toCurrency, amount));\n    calculate(amount);\n  };\n\n  const handleExchange = () => {\n    const newCurrencies = currencies.map(item => {\n      if (item.code === fromCurrency) {\n        const newBalance = parseFloat(item.balance) - parseFloat(fromAmount);\n        return { ...item,\n          balance: newBalance.toFixed(2)\n        };\n      } else if (item.code === toCurrency) {\n        const newBalance = parseFloat(item.balance) + parseFloat(toAmount);\n        return { ...item,\n          balance: newBalance.toFixed(2)\n        };\n      } else {\n        return item;\n      }\n    });\n    setCurrencies(newCurrencies);\n    setFromAmount();\n    setToAmount();\n    setIsExceeding(false);\n  };\n\n  useEffect(() => {\n    const fetchData = async () => {\n      const url = `https://openexchangerates.org/api/latest.json?app_id=81fa12e332b74f45a1de4a276db7c0d1&base=${fromCurrency}`;\n      const response = await fetch(url);\n      const data = await response.json();\n      setRates(data.rates);\n    };\n\n    fetchData();\n  }, [fromCurrency, interval]);\n  useEffect(() => {\n    setToAmount(convertFromTo(toCurrency, fromAmount)); // eslint-disable-next-line\n  }, [rates]);\n  return React.createElement(\"div\", {\n    className: \"exchanger\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"exchanger__row\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150\n    },\n    __self: this\n  }, React.createElement(ExchangerRow, {\n    balance: selectedFromCurrency.balance,\n    currency: selectedFromCurrency.code,\n    sign: selectedFromCurrency.sign,\n    amount: fromAmount,\n    info: fromInfo,\n    currencies: currencies,\n    onAmountChange: handleFromAmountChange,\n    onCurrencyChange: handleFromCurrencyChange,\n    autoFocus: true,\n    alt: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"exchanger__actions\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"exchanger__actions-container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    className: \"exchanger__button exchanger__button--swap\",\n    onClick: handleSwap,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166\n    },\n    __self: this\n  }), React.createElement(\"button\", {\n    className: \"exchanger__button exchanger__button--rates\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170\n    },\n    __self: this\n  }, selectedFromCurrency.sign, 1, \" = \", selectedToCurrency.sign, formatRate), React.createElement(\"div\", {\n    className: \"exchanger__empty-action\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175\n    },\n    __self: this\n  }))), React.createElement(\"div\", {\n    className: \"exchanger__row\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178\n    },\n    __self: this\n  }, React.createElement(ExchangerRow, {\n    balance: selectedToCurrency.balance,\n    currency: selectedToCurrency.code,\n    sign: selectedToCurrency.sign,\n    amount: toAmount,\n    info: toInfo,\n    currencies: currencies,\n    onAmountChange: handleToAmountChange,\n    onCurrencyChange: handleToCurrencyChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179\n    },\n    __self: this\n  })), React.createElement(\"button\", {\n    className: classNames('exchanger__submit-button', {\n      'exchanger__submit-button--enabled': !isExceeding\n    }),\n    disabled: isExceeding,\n    type: \"button\",\n    onClick: handleExchange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 190\n    },\n    __self: this\n  }, \"Exchange\"));\n};\n\nExchanger.whyDidYouRender = {// logOnDifferentValues: true,\n};\nexport default Exchanger;","map":{"version":3,"sources":["/Users/andreu/Documents/Revolut/react-currency-exchange-widget/src/components/Exchanger/Exchanger.js"],"names":["React","useState","useEffect","classNames","useInterval","ExchangerRow","DEFAULT_FROM_CURRENCY","DEFAULT_TO_CURRENCY","EXCHANGE_FEE","MIMIMUM_AMOUNT","ALLOWANCE_LIMIT","Exchanger","fromCurrency","setFromCurrency","toCurrency","setToCurrency","interval","rates","setRates","fromAmount","setFromAmount","toAmount","setToAmount","isExceeding","setIsExceeding","fromInfo","setFromInfo","toInfo","setToInfo","currencies","setCurrencies","code","balance","sign","selectedFromCurrency","find","c","selectedToCurrency","convertFromTo","currency","amount","conversion","toFixed","convertToFrom","formatRate","parseFloat","calculate","floatAmount","fee","isAmountExceeding","isMinAmountReached","isFeeInvolved","isAllowedToExchange","feeInfo","exceedInfo","minInfo","handleSwap","handleFromCurrencyChange","handleToCurrencyChange","handleFromAmountChange","handleToAmountChange","handleExchange","newCurrencies","map","item","newBalance","fetchData","url","response","fetch","data","json","whyDidYouRender"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport classNames from 'classnames';\nimport useInterval from '../../hooks/useInterval';\n// import useFetchRates from '../../hooks/useFetchRates';\nimport ExchangerRow from '../ExchangerRow/ExchangerRow';\nimport './Exchanger.scss';\n\nconst DEFAULT_FROM_CURRENCY = 'GBP';\nconst DEFAULT_TO_CURRENCY = 'EUR';\nconst EXCHANGE_FEE = 0.005;\nconst MIMIMUM_AMOUNT = 0.1;\nconst ALLOWANCE_LIMIT = 1000;\n\nconst Exchanger = () => {\n  const [fromCurrency, setFromCurrency] = useState(DEFAULT_FROM_CURRENCY);\n  const [toCurrency, setToCurrency] = useState(DEFAULT_TO_CURRENCY);\n  const interval = useInterval(10000);\n  const [rates, setRates] = useState(null);\n  const [fromAmount, setFromAmount] = useState();\n  const [toAmount, setToAmount] = useState();\n  const [isExceeding, setIsExceeding] = useState(true);\n  const [fromInfo, setFromInfo] = useState('');\n  const [toInfo, setToInfo] = useState('');\n\n  const [currencies, setCurrencies] = useState([\n    { code: 'GBP', balance: '10', sign: '£' },\n    { code: 'EUR', balance: '0', sign: '€' },\n    { code: 'USD', balance: '0', sign: '$' },\n  ]);\n\n  const selectedFromCurrency = currencies.find((c) => c.code === fromCurrency);\n  const selectedToCurrency = currencies.find((c) => c.code === toCurrency);\n\n  const convertFromTo = (currency, amount) => {\n    if (!rates) return '';\n\n    const conversion = ((amount || 0) * rates[currency]).toFixed(2);\n    // eslint-disable-next-line\n    return conversion == 0 ? '' : conversion;\n  };\n\n  const convertToFrom = (currency, amount) => {\n    if (!rates) return '';\n\n    const conversion = ((amount || 0) / rates[currency]).toFixed(2);\n    // eslint-disable-next-line\n    return conversion == 0 ? '' : conversion;\n  };\n\n  const formatRate =\n    rates && rates[toCurrency]\n      ? parseFloat(rates[toCurrency].toFixed(4))\n      : null;\n\n  const calculate = (amount) => {\n    const floatAmount = parseFloat(amount);\n    const fee = (floatAmount * EXCHANGE_FEE).toFixed(2);\n    const isAmountExceeding = floatAmount > selectedFromCurrency.balance;\n    const isMinAmountReached = !amount || floatAmount >= MIMIMUM_AMOUNT;\n    const isFeeInvolved = floatAmount > ALLOWANCE_LIMIT;\n    const isAllowedToExchange =\n      isAmountExceeding || !isMinAmountReached || !amount;\n    const feeInfo = `Fee: ${selectedFromCurrency.sign}${fee}`;\n    const exceedInfo = 'exceeds balance';\n    const minInfo = `minimum amount is ${\n      selectedFromCurrency.sign\n    }${MIMIMUM_AMOUNT.toFixed(2)}`;\n\n    setIsExceeding(isAllowedToExchange);\n    !isMinAmountReached\n      ? setFromInfo(minInfo)\n      : setFromInfo(isAmountExceeding ? exceedInfo : '');\n    setToInfo(isFeeInvolved ? feeInfo : '');\n  };\n\n  const handleSwap = () => {\n    setFromCurrency(toCurrency);\n    setToCurrency(fromCurrency);\n    setFromAmount(toAmount);\n    setToAmount(fromAmount);\n    calculate(toAmount);\n  };\n\n  const handleFromCurrencyChange = (currency) => {\n    if (currency === toCurrency) {\n      setToCurrency(fromCurrency);\n    }\n\n    setFromCurrency(currency);\n  };\n\n  const handleToCurrencyChange = (currency) => {\n    if (currency === fromCurrency) {\n      setFromCurrency(toCurrency);\n    }\n\n    setToCurrency(currency);\n    setToAmount(convertFromTo(currency, fromAmount));\n  };\n\n  const handleFromAmountChange = (amount) => {\n    setFromAmount(amount);\n    setToAmount(convertFromTo(toCurrency, amount));\n    calculate(amount);\n  };\n\n  const handleToAmountChange = (amount) => {\n    setToAmount(amount);\n    setFromAmount(convertToFrom(toCurrency, amount));\n    calculate(amount);\n  };\n\n  const handleExchange = () => {\n    const newCurrencies = currencies.map((item) => {\n      if (item.code === fromCurrency) {\n        const newBalance = parseFloat(item.balance) - parseFloat(fromAmount);\n        return { ...item, balance: newBalance.toFixed(2) };\n      } else if (item.code === toCurrency) {\n        const newBalance = parseFloat(item.balance) + parseFloat(toAmount);\n        return { ...item, balance: newBalance.toFixed(2) };\n      } else {\n        return item;\n      }\n    });\n\n    setCurrencies(newCurrencies);\n    setFromAmount();\n    setToAmount();\n    setIsExceeding(false);\n  };\n\n  useEffect(() => {\n    const fetchData = async () => {\n      const url = `https://openexchangerates.org/api/latest.json?app_id=81fa12e332b74f45a1de4a276db7c0d1&base=${fromCurrency}`;\n      const response = await fetch(url);\n      const data = await response.json();\n      setRates(data.rates);\n    };\n\n    fetchData();\n  }, [fromCurrency, interval]);\n\n  useEffect(() => {\n    setToAmount(convertFromTo(toCurrency, fromAmount));\n    // eslint-disable-next-line\n  }, [rates]);\n\n  return (\n    <div className=\"exchanger\">\n      <div className=\"exchanger__row\">\n        <ExchangerRow\n          balance={selectedFromCurrency.balance}\n          currency={selectedFromCurrency.code}\n          sign={selectedFromCurrency.sign}\n          amount={fromAmount}\n          info={fromInfo}\n          currencies={currencies}\n          onAmountChange={handleFromAmountChange}\n          onCurrencyChange={handleFromCurrencyChange}\n          autoFocus\n          alt\n        />\n      </div>\n      <div className=\"exchanger__actions\">\n        <div className=\"exchanger__actions-container\">\n          <button\n            className=\"exchanger__button exchanger__button--swap\"\n            onClick={handleSwap}\n          />\n          <button className=\"exchanger__button exchanger__button--rates\">\n            {selectedFromCurrency.sign}\n            {1} = {selectedToCurrency.sign}\n            {formatRate}\n          </button>\n          <div className=\"exchanger__empty-action\" />\n        </div>\n      </div>\n      <div className=\"exchanger__row\">\n        <ExchangerRow\n          balance={selectedToCurrency.balance}\n          currency={selectedToCurrency.code}\n          sign={selectedToCurrency.sign}\n          amount={toAmount}\n          info={toInfo}\n          currencies={currencies}\n          onAmountChange={handleToAmountChange}\n          onCurrencyChange={handleToCurrencyChange}\n        />\n      </div>\n      <button\n        className={classNames('exchanger__submit-button', {\n          'exchanger__submit-button--enabled': !isExceeding,\n        })}\n        disabled={isExceeding}\n        type=\"button\"\n        onClick={handleExchange}\n      >\n        Exchange\n      </button>\n    </div>\n  );\n};\n\nExchanger.whyDidYouRender = {\n  // logOnDifferentValues: true,\n};\n\nexport default Exchanger;\n"]},"metadata":{},"sourceType":"module"}