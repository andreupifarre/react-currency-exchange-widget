{"ast":null,"code":"var _jsxFileName = \"/Users/andreu/Documents/Revolut/react-currency-exchange-widget/src/components/CurrencyDropdown/CurrencyDropdown.js\";\nimport React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport './CurrencyDropdown.scss';\n\nconst CurrencyDropdown = ({\n  currency,\n  currencies,\n  setCurrency\n}) => {\n  const [shown, setShown] = useState(false);\n\n  const handleClick = item => {\n    setShown(false);\n    setCurrency(item);\n  };\n\n  return React.createElement(\"div\", {\n    className: \"currency-dropdown\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    className: \"currency-dropdown__button\",\n    onClick: () => setShown(!shown),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  }, currency), React.createElement(\"ul\", {\n    className: classNames('currency-dropdown__list', {\n      'currency-dropdown__list--shown': shown\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }, currencies.map((c, i) => React.createElement(\"li\", {\n    key: c.code,\n    className: classNames('currency-dropdown__item', {\n      'currency-dropdown__item--active': currency === c.code\n    }),\n    onClick: () => handleClick(c.code),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }, c.code, \" \\u2022 \", c.sign, c.balance))));\n};\n\nexport default CurrencyDropdown;\nCurrencyDropdown.defaultProps = {\n  currencies: [],\n  currency: '',\n  setCurrency: () => {},\n  onCurrencyChange: () => {}\n};\nCurrencyDropdown.propTypes = {\n  currencies: PropTypes.array.isRequired,\n  currency: PropTypes.string.isRequired,\n  setCurrency: PropTypes.func.isRequired,\n  onCurrencyChange: PropTypes.func.isRequired\n};","map":{"version":3,"sources":["/Users/andreu/Documents/Revolut/react-currency-exchange-widget/src/components/CurrencyDropdown/CurrencyDropdown.js"],"names":["React","useState","PropTypes","classNames","CurrencyDropdown","currency","currencies","setCurrency","shown","setShown","handleClick","item","map","c","i","code","sign","balance","defaultProps","onCurrencyChange","propTypes","array","isRequired","string","func"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,UAAP,MAAuB,YAAvB;AACA,OAAO,yBAAP;;AAEA,MAAMC,gBAAgB,GAAG,CAAC;AAAEC,EAAAA,QAAF;AAAYC,EAAAA,UAAZ;AAAwBC,EAAAA;AAAxB,CAAD,KAA2C;AAClE,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBR,QAAQ,CAAC,KAAD,CAAlC;;AAEA,QAAMS,WAAW,GAAIC,IAAD,IAAU;AAC5BF,IAAAA,QAAQ,CAAC,KAAD,CAAR;AACAF,IAAAA,WAAW,CAACI,IAAD,CAAX;AACD,GAHD;;AAKA,SACE;AAAK,IAAA,SAAS,EAAC,mBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AACE,IAAA,SAAS,EAAC,2BADZ;AAEE,IAAA,OAAO,EAAE,MAAMF,QAAQ,CAAC,CAACD,KAAF,CAFzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAIGH,QAJH,CADF,EAOE;AACE,IAAA,SAAS,EAAEF,UAAU,CAAC,yBAAD,EAA4B;AAC/C,wCAAkCK;AADa,KAA5B,CADvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAKGF,UAAU,CAACM,GAAX,CAAe,CAACC,CAAD,EAAIC,CAAJ,KACd;AACE,IAAA,GAAG,EAAED,CAAC,CAACE,IADT;AAEE,IAAA,SAAS,EAAEZ,UAAU,CAAC,yBAAD,EAA4B;AAC/C,yCAAmCE,QAAQ,KAAKQ,CAAC,CAACE;AADH,KAA5B,CAFvB;AAKE,IAAA,OAAO,EAAE,MAAML,WAAW,CAACG,CAAC,CAACE,IAAH,CAL5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAOGF,CAAC,CAACE,IAPL,cAOcF,CAAC,CAACG,IAPhB,EAQGH,CAAC,CAACI,OARL,CADD,CALH,CAPF,CADF;AA4BD,CApCD;;AAsCA,eAAeb,gBAAf;AAEAA,gBAAgB,CAACc,YAAjB,GAAgC;AAC9BZ,EAAAA,UAAU,EAAE,EADkB;AAE9BD,EAAAA,QAAQ,EAAE,EAFoB;AAG9BE,EAAAA,WAAW,EAAE,MAAM,CAAE,CAHS;AAI9BY,EAAAA,gBAAgB,EAAE,MAAM,CAAE;AAJI,CAAhC;AAOAf,gBAAgB,CAACgB,SAAjB,GAA6B;AAC3Bd,EAAAA,UAAU,EAAEJ,SAAS,CAACmB,KAAV,CAAgBC,UADD;AAE3BjB,EAAAA,QAAQ,EAAEH,SAAS,CAACqB,MAAV,CAAiBD,UAFA;AAG3Bf,EAAAA,WAAW,EAAEL,SAAS,CAACsB,IAAV,CAAeF,UAHD;AAI3BH,EAAAA,gBAAgB,EAAEjB,SAAS,CAACsB,IAAV,CAAeF;AAJN,CAA7B","sourcesContent":["import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport './CurrencyDropdown.scss';\n\nconst CurrencyDropdown = ({ currency, currencies, setCurrency }) => {\n  const [shown, setShown] = useState(false);\n\n  const handleClick = (item) => {\n    setShown(false);\n    setCurrency(item);\n  };\n\n  return (\n    <div className=\"currency-dropdown\">\n      <span\n        className=\"currency-dropdown__button\"\n        onClick={() => setShown(!shown)}\n      >\n        {currency}\n      </span>\n      <ul\n        className={classNames('currency-dropdown__list', {\n          'currency-dropdown__list--shown': shown,\n        })}\n      >\n        {currencies.map((c, i) => (\n          <li\n            key={c.code}\n            className={classNames('currency-dropdown__item', {\n              'currency-dropdown__item--active': currency === c.code,\n            })}\n            onClick={() => handleClick(c.code)}\n          >\n            {c.code} â€¢ {c.sign}\n            {c.balance}\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default CurrencyDropdown;\n\nCurrencyDropdown.defaultProps = {\n  currencies: [],\n  currency: '',\n  setCurrency: () => {},\n  onCurrencyChange: () => {},\n};\n\nCurrencyDropdown.propTypes = {\n  currencies: PropTypes.array.isRequired,\n  currency: PropTypes.string.isRequired,\n  setCurrency: PropTypes.func.isRequired,\n  onCurrencyChange: PropTypes.func.isRequired,\n};\n"]},"metadata":{},"sourceType":"module"}