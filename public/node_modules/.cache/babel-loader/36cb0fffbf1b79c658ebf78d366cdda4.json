{"ast":null,"code":"var _jsxFileName = \"/Users/andreu/Documents/Revolut/react-currency-exchange-widget/src/components/Exchanger/Exchanger.js\";\nimport React, { useState, useEffect } from 'react'; // import useDebounce from '../../hooks/useDebounce';\n// import useFetchData from '../../hooks/useFetchData';\n\nimport ExchangerRow from '../ExchangerRow/ExchangerRow';\nimport './Exchanger.scss';\nconst currencies = [{\n  code: 'GBP',\n  balance: '£10',\n  sign: '£'\n}, {\n  code: 'EUR',\n  balance: '€0',\n  sign: '€'\n}, {\n  code: 'USD',\n  balance: '$0',\n  sign: '$'\n}];\n\nconst Exchanger = () => {\n  // const [searchText, setSearchText] = useState('');\n  // const [locations, noResults] = useFetchData(useDebounce(searchText));\n  const [fromCurrency, setFromCurrency] = useState('GBP');\n  const [toCurrency, setToCurrency] = useState('EUR');\n  const [fromAmount, setFromAmount] = useState(0);\n  const [toAmount, setToAmount] = useState(0);\n  const [fromRate, setFromRate] = useState(1);\n  const [toRate, setToRate] = useState(1.1028);\n  const [direction, setDirection] = useState(0);\n  const selectedFromCurrency = currencies.find(item => item.code === fromCurrency);\n  const selectedToCurrency = currencies.find(item => item.code === toCurrency);\n  useEffect(() => {\n    const exchange = parseFloat((fromAmount * toRate).toFixed(2));\n    setToAmount(exchange);\n  }, [fromAmount]);\n  return React.createElement(\"div\", {\n    className: \"exchanger\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"exchanger__row\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, React.createElement(ExchangerRow, {\n    balance: selectedFromCurrency.balance,\n    currency: selectedFromCurrency.code,\n    amount: fromAmount,\n    currencies: currencies,\n    setCurrency: setFromCurrency,\n    setAmount: setFromAmount,\n    alt: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"exchanger__actions\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"exchanger__actions-container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    className: \"exchanger__button exchanger__button--swap\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }), React.createElement(\"button\", {\n    className: \"exchanger__button exchanger__button--rates\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, fromRate, \" = \", toRate), React.createElement(\"div\", {\n    className: \"exchanger__empty-action\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }))), React.createElement(\"div\", {\n    className: \"exchanger__row\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }, React.createElement(ExchangerRow, {\n    balance: selectedToCurrency.balance,\n    currency: selectedToCurrency.code,\n    amount: toAmount,\n    currencies: currencies,\n    setCurrency: setToCurrency,\n    setAmount: setToAmount,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  })), React.createElement(\"button\", {\n    className: \"exchanger__submit-button\",\n    type: \"button\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }, \"Exchange\"));\n};\n\nexport default Exchanger;","map":{"version":3,"sources":["/Users/andreu/Documents/Revolut/react-currency-exchange-widget/src/components/Exchanger/Exchanger.js"],"names":["React","useState","useEffect","ExchangerRow","currencies","code","balance","sign","Exchanger","fromCurrency","setFromCurrency","toCurrency","setToCurrency","fromAmount","setFromAmount","toAmount","setToAmount","fromRate","setFromRate","toRate","setToRate","direction","setDirection","selectedFromCurrency","find","item","selectedToCurrency","exchange","parseFloat","toFixed"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\n// import useDebounce from '../../hooks/useDebounce';\n// import useFetchData from '../../hooks/useFetchData';\nimport ExchangerRow from '../ExchangerRow/ExchangerRow';\nimport './Exchanger.scss';\n\nconst currencies = [\n  { code: 'GBP', balance: '£10', sign: '£' },\n  { code: 'EUR', balance: '€0', sign: '€' },\n  { code: 'USD', balance: '$0', sign: '$' },\n];\n\nconst Exchanger = () => {\n  // const [searchText, setSearchText] = useState('');\n  // const [locations, noResults] = useFetchData(useDebounce(searchText));\n  const [fromCurrency, setFromCurrency] = useState('GBP');\n  const [toCurrency, setToCurrency] = useState('EUR');\n  const [fromAmount, setFromAmount] = useState(0);\n  const [toAmount, setToAmount] = useState(0);\n  const [fromRate, setFromRate] = useState(1);\n  const [toRate, setToRate] = useState(1.1028);\n  const [direction, setDirection] = useState(0);\n\n  const selectedFromCurrency = currencies.find(\n    (item) => item.code === fromCurrency,\n  );\n\n  const selectedToCurrency = currencies.find(\n    (item) => item.code === toCurrency,\n  );\n\n  useEffect(() => {\n    const exchange = parseFloat((fromAmount * toRate).toFixed(2));\n    setToAmount(exchange);\n  }, [fromAmount]);\n\n  return (\n    <div className=\"exchanger\">\n      <div className=\"exchanger__row\">\n        <ExchangerRow\n          balance={selectedFromCurrency.balance}\n          currency={selectedFromCurrency.code}\n          amount={fromAmount}\n          currencies={currencies}\n          setCurrency={setFromCurrency}\n          setAmount={setFromAmount}\n          alt\n        />\n      </div>\n      <div className=\"exchanger__actions\">\n        <div className=\"exchanger__actions-container\">\n          <button className=\"exchanger__button exchanger__button--swap\" />\n          <button className=\"exchanger__button exchanger__button--rates\">\n            {fromRate} = {toRate}\n          </button>\n          <div className=\"exchanger__empty-action\" />\n        </div>\n      </div>\n      <div className=\"exchanger__row\">\n        <ExchangerRow\n          balance={selectedToCurrency.balance}\n          currency={selectedToCurrency.code}\n          amount={toAmount}\n          currencies={currencies}\n          setCurrency={setToCurrency}\n          setAmount={setToAmount}\n        />\n      </div>\n      <button className=\"exchanger__submit-button\" type=\"button\">\n        Exchange\n      </button>\n    </div>\n  );\n};\n\nexport default Exchanger;\n"]},"metadata":{},"sourceType":"module"}