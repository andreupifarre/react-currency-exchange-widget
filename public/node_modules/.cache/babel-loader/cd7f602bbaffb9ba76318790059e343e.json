{"ast":null,"code":"var _jsxFileName = \"/Users/andreu/Documents/Revolut/react-currency-exchange-widget/src/components/ExchangerRow/ExchangerRow.js\";\nimport React from 'react';\nimport classNames from 'classnames';\nimport PropTypes from 'prop-types';\nimport CurrencyDropdown from '../CurrencyDropdown/CurrencyDropdown';\nimport './ExchangerRow.scss';\n\nconst ExchangerRow = ({\n  alt,\n  balance,\n  currency,\n  sign,\n  amount,\n  info,\n  currencies,\n  onCurrencyChange,\n  onAmountChange,\n  autoFocus\n}) => {\n  const handleChange = e => {\n    onAmountChange(e.target.value);\n  };\n\n  return React.createElement(\"div\", {\n    className: classNames('exchanger-row', {\n      'exchanger-row--alt': alt\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"exchanger-row__line\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }, React.createElement(CurrencyDropdown, {\n    currency: currency,\n    currencies: currencies,\n    onCurrencyChange: onCurrencyChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }), React.createElement(\"input\", {\n    type: \"number\",\n    className: \"exchanger-row__amount\",\n    autoComplete: \"off\",\n    placeholder: \"0\",\n    onChange: handleChange,\n    value: amount,\n    autoFocus: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"exchanger-row__line\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    className: \"exchanger-row__balance\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, \"Balance: \", sign, balance), React.createElement(\"span\", {\n    className: \"exchanger-row__fee\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }, info)));\n};\n\nexport default ExchangerRow;\nExchangerRow.defaultProps = {\n  alt: false,\n  balance: '',\n  currency: '',\n  sign: '',\n  amount: '',\n  info: '',\n  currencies: [],\n  onCurrencyChange: () => {},\n  onAmountChange: () => {},\n  autoFocus: false\n};\nExchangerRow.propTypes = {\n  alt: PropTypes.bool.isRequired,\n  balance: PropTypes.string.isRequired,\n  currency: PropTypes.string.isRequired,\n  sign: PropTypes.string.isRequired,\n  amount: PropTypes.string.isRequired,\n  info: PropTypes.string.isRequired,\n  currencies: PropTypes.array.isRequired,\n  onCurrencyChange: PropTypes.func.isRequired,\n  onAmountChange: PropTypes.func.isRequired,\n  autoFocus: PropTypes.bool\n};","map":{"version":3,"sources":["/Users/andreu/Documents/Revolut/react-currency-exchange-widget/src/components/ExchangerRow/ExchangerRow.js"],"names":["React","classNames","PropTypes","CurrencyDropdown","ExchangerRow","alt","balance","currency","sign","amount","info","currencies","onCurrencyChange","onAmountChange","autoFocus","handleChange","e","target","value","defaultProps","propTypes","bool","isRequired","string","array","func"],"mappings":"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","sourcesContent":["import React from 'react';\nimport classNames from 'classnames';\nimport PropTypes from 'prop-types';\nimport CurrencyDropdown from '../CurrencyDropdown/CurrencyDropdown';\nimport './ExchangerRow.scss';\n\nconst ExchangerRow = ({\n  alt,\n  balance,\n  currency,\n  sign,\n  amount,\n  info,\n  currencies,\n  onCurrencyChange,\n  onAmountChange,\n  autoFocus,\n}) => {\n  const handleChange = (e) => {\n    onAmountChange(e.target.value);\n  };\n\n  return (\n    <div className={classNames('exchanger-row', { 'exchanger-row--alt': alt })}>\n      <div className=\"exchanger-row__line\">\n        <CurrencyDropdown\n          currency={currency}\n          currencies={currencies}\n          onCurrencyChange={onCurrencyChange}\n        />\n        <input\n          type=\"number\"\n          className=\"exchanger-row__amount\"\n          autoComplete=\"off\"\n          placeholder=\"0\"\n          onChange={handleChange}\n          value={amount}\n          autoFocus\n        />\n      </div>\n      <div className=\"exchanger-row__line\">\n        <span className=\"exchanger-row__balance\">\n          Balance: {sign}\n          {balance}\n        </span>\n        <span className=\"exchanger-row__fee\">{info}</span>\n      </div>\n    </div>\n  );\n};\n\nexport default ExchangerRow;\n\nExchangerRow.defaultProps = {\n  alt: false,\n  balance: '',\n  currency: '',\n  sign: '',\n  amount: '',\n  info: '',\n  currencies: [],\n  onCurrencyChange: () => {},\n  onAmountChange: () => {},\n  autoFocus: false,\n};\n\nExchangerRow.propTypes = {\n  alt: PropTypes.bool.isRequired,\n  balance: PropTypes.string.isRequired,\n  currency: PropTypes.string.isRequired,\n  sign: PropTypes.string.isRequired,\n  amount: PropTypes.string.isRequired,\n  info: PropTypes.string.isRequired,\n  currencies: PropTypes.array.isRequired,\n  onCurrencyChange: PropTypes.func.isRequired,\n  onAmountChange: PropTypes.func.isRequired,\n  autoFocus: PropTypes.bool,\n};\n"]},"metadata":{},"sourceType":"module"}