{"ast":null,"code":"var _jsxFileName = \"/Users/andreu/Documents/Revolut/react-currency-exchange-widget/src/components/Exchanger/Exchanger.js\";\nimport React, { useState, useEffect } from 'react'; // import useDebounce from '../../hooks/useDebounce';\n// import useFetchData from '../../hooks/useFetchData';\n\nimport ExchangerRow from '../ExchangerRow/ExchangerRow';\nimport './Exchanger.scss';\nconst defaultFromCurrency = 'GBP';\nconst defaultToCurrency = 'EUR';\nconst currencies = [{\n  code: 'GBP',\n  balance: '10',\n  sign: '£'\n}, {\n  code: 'EUR',\n  balance: '0',\n  sign: '€'\n}, {\n  code: 'USD',\n  balance: '0',\n  sign: '$'\n}];\n\nconst Exchanger = () => {\n  // const [searchText, setSearchText] = useState('');\n  // const [locations, noResults] = useFetchData(useDebounce(searchText));\n  const [fromCurrency, setFromCurrency] = useState(defaultFromCurrency);\n  const [toCurrency, setToCurrency] = useState(defaultToCurrency);\n  const [fromAmount, setFromAmount] = useState(0);\n  const [toAmount, setToAmount] = useState(0);\n  const [fromRate, setFromRate] = useState(1);\n  const [toRate, setToRate] = useState(1.1028);\n  const [activeCurrency, setActiveCurrency] = useState(defaultFromCurrency);\n  const selectedFromCurrency = currencies.find(item => item.code === fromCurrency);\n  const selectedToCurrency = currencies.find(item => item.code === toCurrency);\n  useEffect(() => {\n    if (activeCurrency !== selectedFromCurrency.code) return;\n    const exchange = parseFloat((fromAmount * toRate).toFixed(2));\n    setToAmount(exchange);\n  }, [fromAmount]);\n  useEffect(() => {\n    if (activeCurrency !== selectedToCurrency.code) return;\n    const exchange = parseFloat((toAmount / toRate).toFixed(2));\n    setFromAmount(exchange);\n  }, [toAmount]);\n  useEffect(() => {\n    console.log(fromCurrency);\n  }, [fromCurrency]);\n  useEffect(() => {\n    console.log(toCurrency);\n  }, [toCurrency]);\n  return React.createElement(\"div\", {\n    className: \"exchanger\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"exchanger__row\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }, React.createElement(ExchangerRow, {\n    balance: selectedFromCurrency.balance,\n    currency: selectedFromCurrency.code,\n    sign: selectedFromCurrency.sign,\n    amount: fromAmount,\n    currencies: currencies,\n    setCurrency: setFromCurrency,\n    setAmount: setFromAmount,\n    setActiveCurrency: setActiveCurrency,\n    alt: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"exchanger__actions\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"exchanger__actions-container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    className: \"exchanger__button exchanger__button--swap\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }), React.createElement(\"button\", {\n    className: \"exchanger__button exchanger__button--rates\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }, selectedFromCurrency.sign, fromRate, \" = \", selectedToCurrency.sign, toRate), React.createElement(\"div\", {\n    className: \"exchanger__empty-action\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  }))), React.createElement(\"div\", {\n    className: \"exchanger__row\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80\n    },\n    __self: this\n  }, React.createElement(ExchangerRow, {\n    balance: selectedToCurrency.balance,\n    currency: selectedToCurrency.code,\n    sign: selectedToCurrency.sign,\n    amount: toAmount,\n    currencies: currencies,\n    setCurrency: setToCurrency,\n    setAmount: setToAmount,\n    setActiveCurrency: setActiveCurrency,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81\n    },\n    __self: this\n  })), React.createElement(\"button\", {\n    className: \"exchanger__submit-button\",\n    type: \"button\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92\n    },\n    __self: this\n  }, \"Exchange\"));\n};\n\nexport default Exchanger;","map":{"version":3,"sources":["/Users/andreu/Documents/Revolut/react-currency-exchange-widget/src/components/Exchanger/Exchanger.js"],"names":["React","useState","useEffect","ExchangerRow","defaultFromCurrency","defaultToCurrency","currencies","code","balance","sign","Exchanger","fromCurrency","setFromCurrency","toCurrency","setToCurrency","fromAmount","setFromAmount","toAmount","setToAmount","fromRate","setFromRate","toRate","setToRate","activeCurrency","setActiveCurrency","selectedFromCurrency","find","item","selectedToCurrency","exchange","parseFloat","toFixed","console","log"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\n// import useDebounce from '../../hooks/useDebounce';\n// import useFetchData from '../../hooks/useFetchData';\nimport ExchangerRow from '../ExchangerRow/ExchangerRow';\nimport './Exchanger.scss';\n\nconst defaultFromCurrency = 'GBP';\nconst defaultToCurrency = 'EUR';\nconst currencies = [\n  { code: 'GBP', balance: '10', sign: '£' },\n  { code: 'EUR', balance: '0', sign: '€' },\n  { code: 'USD', balance: '0', sign: '$' },\n];\n\nconst Exchanger = () => {\n  // const [searchText, setSearchText] = useState('');\n  // const [locations, noResults] = useFetchData(useDebounce(searchText));\n  const [fromCurrency, setFromCurrency] = useState(defaultFromCurrency);\n  const [toCurrency, setToCurrency] = useState(defaultToCurrency);\n  const [fromAmount, setFromAmount] = useState(0);\n  const [toAmount, setToAmount] = useState(0);\n  const [fromRate, setFromRate] = useState(1);\n  const [toRate, setToRate] = useState(1.1028);\n  const [activeCurrency, setActiveCurrency] = useState(defaultFromCurrency);\n\n  const selectedFromCurrency = currencies.find(\n    (item) => item.code === fromCurrency,\n  );\n\n  const selectedToCurrency = currencies.find(\n    (item) => item.code === toCurrency,\n  );\n\n  useEffect(() => {\n    if (activeCurrency !== selectedFromCurrency.code) return;\n    const exchange = parseFloat((fromAmount * toRate).toFixed(2));\n    setToAmount(exchange);\n  }, [fromAmount]);\n\n  useEffect(() => {\n    if (activeCurrency !== selectedToCurrency.code) return;\n    const exchange = parseFloat((toAmount / toRate).toFixed(2));\n    setFromAmount(exchange);\n  }, [toAmount]);\n\n  useEffect(() => {\n    console.log(fromCurrency);\n  }, [fromCurrency]);\n\n  useEffect(() => {\n    console.log(toCurrency);\n  }, [toCurrency]);\n\n  return (\n    <div className=\"exchanger\">\n      <div className=\"exchanger__row\">\n        <ExchangerRow\n          balance={selectedFromCurrency.balance}\n          currency={selectedFromCurrency.code}\n          sign={selectedFromCurrency.sign}\n          amount={fromAmount}\n          currencies={currencies}\n          setCurrency={setFromCurrency}\n          setAmount={setFromAmount}\n          setActiveCurrency={setActiveCurrency}\n          alt\n        />\n      </div>\n      <div className=\"exchanger__actions\">\n        <div className=\"exchanger__actions-container\">\n          <button className=\"exchanger__button exchanger__button--swap\" />\n          <button className=\"exchanger__button exchanger__button--rates\">\n            {selectedFromCurrency.sign}\n            {fromRate} = {selectedToCurrency.sign}\n            {toRate}\n          </button>\n          <div className=\"exchanger__empty-action\" />\n        </div>\n      </div>\n      <div className=\"exchanger__row\">\n        <ExchangerRow\n          balance={selectedToCurrency.balance}\n          currency={selectedToCurrency.code}\n          sign={selectedToCurrency.sign}\n          amount={toAmount}\n          currencies={currencies}\n          setCurrency={setToCurrency}\n          setAmount={setToAmount}\n          setActiveCurrency={setActiveCurrency}\n        />\n      </div>\n      <button className=\"exchanger__submit-button\" type=\"button\">\n        Exchange\n      </button>\n    </div>\n  );\n};\n\nexport default Exchanger;\n"]},"metadata":{},"sourceType":"module"}