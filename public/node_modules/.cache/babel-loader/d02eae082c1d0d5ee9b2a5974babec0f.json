{"ast":null,"code":"var _jsxFileName = \"/Users/andreu/Documents/Revolut/react-currency-exchange-widget/src/components/ExchangerRow/ExchangerRow.js\";\nimport React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport useDebounce from '../../hooks/useDebounce';\nimport useFetchData from '../../hooks/useFetchData';\nimport CurrencyDropdown from '../CurrencyDropdown/CurrencyDropdown';\nimport './ExchangerRow.scss';\n\nconst ExchangerRow = ({\n  alt,\n  currency,\n  currencies,\n  setCurrency,\n  setAmount\n}) => {\n  // const [locations, noResults] = useFetchData(useDebounce(v));\n  return React.createElement(\"div\", {\n    className: \"exchanger-row\",\n    style: {\n      backgroundColor: alt ? 'white' : 'transparent'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"exchanger-row__line\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }, React.createElement(CurrencyDropdown, {\n    currency: currency,\n    currencies: currencies,\n    setCurrency: setCurrency,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }), React.createElement(\"input\", {\n    type: \"text\",\n    className: \"exchanger-row__amount\",\n    autoComplete: \"off\",\n    placeholder: \"0\",\n    onChange: e => setAmount(e.target.value),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"exchanger-row__line\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    className: \"exchanger-row__balance\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, \"Balance: \", '$0'), React.createElement(\"span\", {\n    className: \"exchanger-row__fee\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, \"Fee: \", '$12,5675.73')));\n};\n\nexport default ExchangerRow;\nExchangerRow.defaultProps = {\n  alt: false,\n  currency: '',\n  currencies: [],\n  setCurrency: () => {},\n  setAmount: () => {}\n};\nExchangerRow.propTypes = {\n  alt: PropTypes.bool.isRequired,\n  currency: PropTypes.string.isRequired,\n  currencies: PropTypes.array.isRequired,\n  setCurrency: PropTypes.func.isRequired,\n  setAmount: PropTypes.func.isRequired\n};","map":{"version":3,"sources":["/Users/andreu/Documents/Revolut/react-currency-exchange-widget/src/components/ExchangerRow/ExchangerRow.js"],"names":["React","useState","PropTypes","useDebounce","useFetchData","CurrencyDropdown","ExchangerRow","alt","currency","currencies","setCurrency","setAmount","backgroundColor","e","target","value","defaultProps","propTypes","bool","isRequired","string","array","func"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,WAAP,MAAwB,yBAAxB;AACA,OAAOC,YAAP,MAAyB,0BAAzB;AACA,OAAOC,gBAAP,MAA6B,sCAA7B;AACA,OAAO,qBAAP;;AAEA,MAAMC,YAAY,GAAG,CAAC;AACpBC,EAAAA,GADoB;AAEpBC,EAAAA,QAFoB;AAGpBC,EAAAA,UAHoB;AAIpBC,EAAAA,WAJoB;AAKpBC,EAAAA;AALoB,CAAD,KAMf;AACJ;AAEA,SACE;AACE,IAAA,SAAS,EAAC,eADZ;AAEE,IAAA,KAAK,EAAE;AAAEC,MAAAA,eAAe,EAAEL,GAAG,GAAG,OAAH,GAAa;AAAnC,KAFT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAIE;AAAK,IAAA,SAAS,EAAC,qBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,gBAAD;AACE,IAAA,QAAQ,EAAEC,QADZ;AAEE,IAAA,UAAU,EAAEC,UAFd;AAGE,IAAA,WAAW,EAAEC,WAHf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAME;AACE,IAAA,IAAI,EAAC,MADP;AAEE,IAAA,SAAS,EAAC,uBAFZ;AAGE,IAAA,YAAY,EAAC,KAHf;AAIE,IAAA,WAAW,EAAC,GAJd;AAKE,IAAA,QAAQ,EAAGG,CAAD,IAAOF,SAAS,CAACE,CAAC,CAACC,MAAF,CAASC,KAAV,CAL5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANF,CAJF,EAkBE;AAAK,IAAA,SAAS,EAAC,qBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAM,IAAA,SAAS,EAAC,wBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAmD,IAAnD,CADF,EAEE;AAAM,IAAA,SAAS,EAAC,oBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAA2C,aAA3C,CAFF,CAlBF,CADF;AAyBD,CAlCD;;AAoCA,eAAeT,YAAf;AAEAA,YAAY,CAACU,YAAb,GAA4B;AAC1BT,EAAAA,GAAG,EAAE,KADqB;AAE1BC,EAAAA,QAAQ,EAAE,EAFgB;AAG1BC,EAAAA,UAAU,EAAE,EAHc;AAI1BC,EAAAA,WAAW,EAAE,MAAM,CAAE,CAJK;AAK1BC,EAAAA,SAAS,EAAE,MAAM,CAAE;AALO,CAA5B;AAQAL,YAAY,CAACW,SAAb,GAAyB;AACvBV,EAAAA,GAAG,EAAEL,SAAS,CAACgB,IAAV,CAAeC,UADG;AAEvBX,EAAAA,QAAQ,EAAEN,SAAS,CAACkB,MAAV,CAAiBD,UAFJ;AAGvBV,EAAAA,UAAU,EAAEP,SAAS,CAACmB,KAAV,CAAgBF,UAHL;AAIvBT,EAAAA,WAAW,EAAER,SAAS,CAACoB,IAAV,CAAeH,UAJL;AAKvBR,EAAAA,SAAS,EAAET,SAAS,CAACoB,IAAV,CAAeH;AALH,CAAzB","sourcesContent":["import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport useDebounce from '../../hooks/useDebounce';\nimport useFetchData from '../../hooks/useFetchData';\nimport CurrencyDropdown from '../CurrencyDropdown/CurrencyDropdown';\nimport './ExchangerRow.scss';\n\nconst ExchangerRow = ({\n  alt,\n  currency,\n  currencies,\n  setCurrency,\n  setAmount,\n}) => {\n  // const [locations, noResults] = useFetchData(useDebounce(v));\n\n  return (\n    <div\n      className=\"exchanger-row\"\n      style={{ backgroundColor: alt ? 'white' : 'transparent' }}\n    >\n      <div className=\"exchanger-row__line\">\n        <CurrencyDropdown\n          currency={currency}\n          currencies={currencies}\n          setCurrency={setCurrency}\n        />\n        <input\n          type=\"text\"\n          className=\"exchanger-row__amount\"\n          autoComplete=\"off\"\n          placeholder=\"0\"\n          onChange={(e) => setAmount(e.target.value)}\n        />\n      </div>\n      <div className=\"exchanger-row__line\">\n        <span className=\"exchanger-row__balance\">Balance: {'$0'}</span>\n        <span className=\"exchanger-row__fee\">Fee: {'$12,5675.73'}</span>\n      </div>\n    </div>\n  );\n};\n\nexport default ExchangerRow;\n\nExchangerRow.defaultProps = {\n  alt: false,\n  currency: '',\n  currencies: [],\n  setCurrency: () => {},\n  setAmount: () => {},\n};\n\nExchangerRow.propTypes = {\n  alt: PropTypes.bool.isRequired,\n  currency: PropTypes.string.isRequired,\n  currencies: PropTypes.array.isRequired,\n  setCurrency: PropTypes.func.isRequired,\n  setAmount: PropTypes.func.isRequired,\n};\n"]},"metadata":{},"sourceType":"module"}