{"ast":null,"code":"var _jsxFileName = \"/Users/andreu/Documents/Revolut/react-currency-exchange-widget/src/components/Exchanger/Exchanger.js\";\nimport React, { useState, useEffect } from 'react';\nimport classNames from 'classnames';\nimport useInterval from '../../hooks/useInterval'; // import useFetchRates from '../../hooks/useFetchRates';\n\nimport ExchangerRow from '../ExchangerRow/ExchangerRow';\nimport './Exchanger.scss';\nconst DEFAULT_FROM_CURRENCY = 'GBP';\nconst DEFAULT_TO_CURRENCY = 'EUR';\nconst EXCHANGE_FEE = 0.005;\nconst MIMIMUM_AMOUNT = 0.1;\nconst ALLOWANCE_LIMIT = 1000;\nconst FETCH_INTERVAL = 10000;\nconst BALANCES = [{\n  code: 'GBP',\n  balance: '10',\n  sign: '£'\n}, {\n  code: 'EUR',\n  balance: '0',\n  sign: '€'\n}, {\n  code: 'USD',\n  balance: '0',\n  sign: '$'\n}];\n\nconst Exchanger = () => {\n  const [fromCurrency, setFromCurrency] = useState(DEFAULT_FROM_CURRENCY);\n  const [toCurrency, setToCurrency] = useState(DEFAULT_TO_CURRENCY);\n  const interval = useInterval(FETCH_INTERVAL);\n  const [rates, setRates] = useState(null);\n  const [fromAmount, setFromAmount] = useState();\n  const [toAmount, setToAmount] = useState();\n  const [isExceeding, setIsExceeding] = useState(true);\n  const [fromInfo, setFromInfo] = useState('');\n  const [toInfo, setToInfo] = useState('');\n  const [currencies, setCurrencies] = useState(BALANCES);\n  const selectedFromCurrency = currencies.find(c => c.code === fromCurrency);\n  const selectedToCurrency = currencies.find(c => c.code === toCurrency);\n\n  const convertFromTo = (currency, amount) => {\n    if (!rates) return '';\n    const conversion = ((amount || 0) * rates[currency]).toFixed(2); // eslint-disable-next-line\n\n    return conversion == 0 ? '' : conversion;\n  };\n\n  const convertToFrom = (currency, amount) => {\n    if (!rates) return '';\n    const conversion = ((amount || 0) / rates[currency]).toFixed(2); // eslint-disable-next-line\n\n    return conversion == 0 ? '' : conversion;\n  };\n\n  const formatRate = rates && rates[toCurrency] && parseFloat(rates[toCurrency].toFixed(4));\n\n  const calculate = (amount, currency) => {\n    const floatAmount = parseFloat(amount);\n    const fee = (floatAmount * EXCHANGE_FEE).toFixed(2);\n    const isAmountExceeding = floatAmount > parseFloat(currency.balance);\n    const isMinAmountReached = !amount || floatAmount >= MIMIMUM_AMOUNT;\n    const isFeeInvolved = floatAmount > ALLOWANCE_LIMIT;\n    const isAllowedToExchange = isAmountExceeding || !isMinAmountReached || !amount;\n    const feeInfo = `Fee: ${currency.sign}${fee}`;\n    const exceedInfo = 'exceeds balance';\n    const minInfo = `minimum amount is ${currency.sign}${MIMIMUM_AMOUNT.toFixed(2)}`;\n    setIsExceeding(isAllowedToExchange);\n    !isMinAmountReached ? setFromInfo(minInfo) : setFromInfo(isAmountExceeding ? exceedInfo : '');\n    setToInfo(isFeeInvolved ? feeInfo : '');\n  };\n\n  const handleSwap = () => {\n    setFromCurrency(toCurrency);\n    setToCurrency(fromCurrency);\n    setFromAmount(toAmount);\n    setToAmount(fromAmount);\n    calculate(toAmount, selectedToCurrency);\n  };\n\n  const handleFromCurrencyChange = currency => {\n    // if (currency === toCurrency) {\n    //   setToCurrency(fromCurrency);\n    //   calculate(toAmount, selectedToCurrency);\n    // }\n    setFromCurrency(currency);\n  };\n\n  const handleToCurrencyChange = currency => {\n    // if (currency === fromCurrency) {\n    //   setFromCurrency(toCurrency);\n    //   calculate(toAmount, selectedToCurrency);\n    // }\n    setToCurrency(currency); // setToAmount(convertFromTo(currency, fromAmount));\n\n    setFromAmount(converToFrom(currency, toAmount));\n  };\n\n  const handleFromAmountChange = amount => {\n    setFromAmount(amount);\n    setToAmount(convertFromTo(toCurrency, amount));\n    calculate(amount, selectedFromCurrency);\n  };\n\n  const handleToAmountChange = amount => {\n    setToAmount(amount);\n    setFromAmount(convertToFrom(toCurrency, amount));\n    calculate(amount, selectedFromCurrency);\n  };\n\n  const handleExchange = () => {\n    const newCurrencies = currencies.map(item => {\n      if (item.code === fromCurrency) {\n        const newBalance = parseFloat(item.balance) - parseFloat(fromAmount);\n        return { ...item,\n          balance: newBalance.toFixed(2)\n        };\n      } else if (item.code === toCurrency) {\n        const newBalance = parseFloat(item.balance) + parseFloat(toAmount);\n        return { ...item,\n          balance: newBalance.toFixed(2)\n        };\n      } else {\n        return item;\n      }\n    });\n    setCurrencies(newCurrencies);\n    setFromAmount();\n    setToAmount();\n    setIsExceeding(false);\n  };\n\n  useEffect(() => {\n    const fetchData = async () => {\n      const url = `https://openexchangerates.org/api/latest.json?app_id=81fa12e332b74f45a1de4a276db7c0d1&base=${fromCurrency}`;\n      const response = await fetch(url);\n      const data = await response.json();\n      setRates(data.rates);\n    };\n\n    fetchData();\n  }, [fromCurrency, interval]);\n  useEffect(() => {// setToAmount(convertFromTo(toCurrency, fromAmount));\n    // eslint-disable-next-line\n  }, [rates]);\n  return React.createElement(\"div\", {\n    className: \"exchanger\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"exchanger__row\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150\n    },\n    __self: this\n  }, React.createElement(ExchangerRow, {\n    balance: selectedFromCurrency.balance,\n    currency: selectedFromCurrency.code,\n    sign: selectedFromCurrency.sign,\n    amount: fromAmount,\n    info: fromInfo,\n    currencies: currencies,\n    onAmountChange: handleFromAmountChange,\n    onCurrencyChange: handleFromCurrencyChange,\n    autoFocus: true,\n    alt: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"exchanger__actions\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"exchanger__actions-container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    className: \"exchanger__button exchanger__button--swap\",\n    onClick: handleSwap,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166\n    },\n    __self: this\n  }), React.createElement(\"button\", {\n    className: \"exchanger__button exchanger__button--rates\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170\n    },\n    __self: this\n  }, selectedFromCurrency.sign, 1, \" = \", selectedToCurrency.sign, formatRate), React.createElement(\"div\", {\n    className: \"exchanger__empty-action\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175\n    },\n    __self: this\n  }))), React.createElement(\"div\", {\n    className: \"exchanger__row\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178\n    },\n    __self: this\n  }, React.createElement(ExchangerRow, {\n    balance: selectedToCurrency.balance,\n    currency: selectedToCurrency.code,\n    sign: selectedToCurrency.sign,\n    amount: toAmount,\n    info: toInfo,\n    currencies: currencies,\n    onAmountChange: handleToAmountChange,\n    onCurrencyChange: handleToCurrencyChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179\n    },\n    __self: this\n  })), React.createElement(\"button\", {\n    className: classNames('exchanger__submit-button', {\n      'exchanger__submit-button--enabled': !isExceeding\n    }),\n    disabled: isExceeding,\n    type: \"button\",\n    onClick: handleExchange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 190\n    },\n    __self: this\n  }, \"Exchange\"));\n};\n\nExchanger.whyDidYouRender = {// logOnDifferentValues: true,\n};\nexport default Exchanger;","map":{"version":3,"sources":["/Users/andreu/Documents/Revolut/react-currency-exchange-widget/src/components/Exchanger/Exchanger.js"],"names":["React","useState","useEffect","classNames","useInterval","ExchangerRow","DEFAULT_FROM_CURRENCY","DEFAULT_TO_CURRENCY","EXCHANGE_FEE","MIMIMUM_AMOUNT","ALLOWANCE_LIMIT","FETCH_INTERVAL","BALANCES","code","balance","sign","Exchanger","fromCurrency","setFromCurrency","toCurrency","setToCurrency","interval","rates","setRates","fromAmount","setFromAmount","toAmount","setToAmount","isExceeding","setIsExceeding","fromInfo","setFromInfo","toInfo","setToInfo","currencies","setCurrencies","selectedFromCurrency","find","c","selectedToCurrency","convertFromTo","currency","amount","conversion","toFixed","convertToFrom","formatRate","parseFloat","calculate","floatAmount","fee","isAmountExceeding","isMinAmountReached","isFeeInvolved","isAllowedToExchange","feeInfo","exceedInfo","minInfo","handleSwap","handleFromCurrencyChange","handleToCurrencyChange","converToFrom","handleFromAmountChange","handleToAmountChange","handleExchange","newCurrencies","map","item","newBalance","fetchData","url","response","fetch","data","json","whyDidYouRender"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport classNames from 'classnames';\nimport useInterval from '../../hooks/useInterval';\n// import useFetchRates from '../../hooks/useFetchRates';\nimport ExchangerRow from '../ExchangerRow/ExchangerRow';\nimport './Exchanger.scss';\n\nconst DEFAULT_FROM_CURRENCY = 'GBP';\nconst DEFAULT_TO_CURRENCY = 'EUR';\nconst EXCHANGE_FEE = 0.005;\nconst MIMIMUM_AMOUNT = 0.1;\nconst ALLOWANCE_LIMIT = 1000;\nconst FETCH_INTERVAL = 10000;\nconst BALANCES = [\n  { code: 'GBP', balance: '10', sign: '£' },\n  { code: 'EUR', balance: '0', sign: '€' },\n  { code: 'USD', balance: '0', sign: '$' },\n];\n\nconst Exchanger = () => {\n  const [fromCurrency, setFromCurrency] = useState(DEFAULT_FROM_CURRENCY);\n  const [toCurrency, setToCurrency] = useState(DEFAULT_TO_CURRENCY);\n  const interval = useInterval(FETCH_INTERVAL);\n  const [rates, setRates] = useState(null);\n  const [fromAmount, setFromAmount] = useState();\n  const [toAmount, setToAmount] = useState();\n  const [isExceeding, setIsExceeding] = useState(true);\n  const [fromInfo, setFromInfo] = useState('');\n  const [toInfo, setToInfo] = useState('');\n  const [currencies, setCurrencies] = useState(BALANCES);\n\n  const selectedFromCurrency = currencies.find((c) => c.code === fromCurrency);\n  const selectedToCurrency = currencies.find((c) => c.code === toCurrency);\n\n  const convertFromTo = (currency, amount) => {\n    if (!rates) return '';\n\n    const conversion = ((amount || 0) * rates[currency]).toFixed(2);\n    // eslint-disable-next-line\n    return conversion == 0 ? '' : conversion;\n  };\n\n  const convertToFrom = (currency, amount) => {\n    if (!rates) return '';\n\n    const conversion = ((amount || 0) / rates[currency]).toFixed(2);\n    // eslint-disable-next-line\n    return conversion == 0 ? '' : conversion;\n  };\n\n  const formatRate =\n    rates && rates[toCurrency] && parseFloat(rates[toCurrency].toFixed(4));\n\n  const calculate = (amount, currency) => {\n    const floatAmount = parseFloat(amount);\n    const fee = (floatAmount * EXCHANGE_FEE).toFixed(2);\n    const isAmountExceeding = floatAmount > parseFloat(currency.balance);\n    const isMinAmountReached = !amount || floatAmount >= MIMIMUM_AMOUNT;\n    const isFeeInvolved = floatAmount > ALLOWANCE_LIMIT;\n    const isAllowedToExchange =\n      isAmountExceeding || !isMinAmountReached || !amount;\n    const feeInfo = `Fee: ${currency.sign}${fee}`;\n    const exceedInfo = 'exceeds balance';\n    const minInfo = `minimum amount is ${currency.sign}${MIMIMUM_AMOUNT.toFixed(\n      2,\n    )}`;\n\n    setIsExceeding(isAllowedToExchange);\n    !isMinAmountReached\n      ? setFromInfo(minInfo)\n      : setFromInfo(isAmountExceeding ? exceedInfo : '');\n    setToInfo(isFeeInvolved ? feeInfo : '');\n  };\n\n  const handleSwap = () => {\n    setFromCurrency(toCurrency);\n    setToCurrency(fromCurrency);\n    setFromAmount(toAmount);\n    setToAmount(fromAmount);\n    calculate(toAmount, selectedToCurrency);\n  };\n\n  const handleFromCurrencyChange = (currency) => {\n    // if (currency === toCurrency) {\n    //   setToCurrency(fromCurrency);\n    //   calculate(toAmount, selectedToCurrency);\n    // }\n    setFromCurrency(currency);\n  };\n\n  const handleToCurrencyChange = (currency) => {\n    // if (currency === fromCurrency) {\n    //   setFromCurrency(toCurrency);\n    //   calculate(toAmount, selectedToCurrency);\n    // }\n    setToCurrency(currency);\n    // setToAmount(convertFromTo(currency, fromAmount));\n    setFromAmount(converToFrom(currency, toAmount));\n  };\n\n  const handleFromAmountChange = (amount) => {\n    setFromAmount(amount);\n    setToAmount(convertFromTo(toCurrency, amount));\n    calculate(amount, selectedFromCurrency);\n  };\n\n  const handleToAmountChange = (amount) => {\n    setToAmount(amount);\n    setFromAmount(convertToFrom(toCurrency, amount));\n    calculate(amount, selectedFromCurrency);\n  };\n\n  const handleExchange = () => {\n    const newCurrencies = currencies.map((item) => {\n      if (item.code === fromCurrency) {\n        const newBalance = parseFloat(item.balance) - parseFloat(fromAmount);\n        return { ...item, balance: newBalance.toFixed(2) };\n      } else if (item.code === toCurrency) {\n        const newBalance = parseFloat(item.balance) + parseFloat(toAmount);\n        return { ...item, balance: newBalance.toFixed(2) };\n      } else {\n        return item;\n      }\n    });\n\n    setCurrencies(newCurrencies);\n    setFromAmount();\n    setToAmount();\n    setIsExceeding(false);\n  };\n\n  useEffect(() => {\n    const fetchData = async () => {\n      const url = `https://openexchangerates.org/api/latest.json?app_id=81fa12e332b74f45a1de4a276db7c0d1&base=${fromCurrency}`;\n      const response = await fetch(url);\n      const data = await response.json();\n      setRates(data.rates);\n    };\n\n    fetchData();\n  }, [fromCurrency, interval]);\n\n  useEffect(() => {\n    // setToAmount(convertFromTo(toCurrency, fromAmount));\n    // eslint-disable-next-line\n  }, [rates]);\n\n  return (\n    <div className=\"exchanger\">\n      <div className=\"exchanger__row\">\n        <ExchangerRow\n          balance={selectedFromCurrency.balance}\n          currency={selectedFromCurrency.code}\n          sign={selectedFromCurrency.sign}\n          amount={fromAmount}\n          info={fromInfo}\n          currencies={currencies}\n          onAmountChange={handleFromAmountChange}\n          onCurrencyChange={handleFromCurrencyChange}\n          autoFocus\n          alt\n        />\n      </div>\n      <div className=\"exchanger__actions\">\n        <div className=\"exchanger__actions-container\">\n          <button\n            className=\"exchanger__button exchanger__button--swap\"\n            onClick={handleSwap}\n          />\n          <button className=\"exchanger__button exchanger__button--rates\">\n            {selectedFromCurrency.sign}\n            {1} = {selectedToCurrency.sign}\n            {formatRate}\n          </button>\n          <div className=\"exchanger__empty-action\" />\n        </div>\n      </div>\n      <div className=\"exchanger__row\">\n        <ExchangerRow\n          balance={selectedToCurrency.balance}\n          currency={selectedToCurrency.code}\n          sign={selectedToCurrency.sign}\n          amount={toAmount}\n          info={toInfo}\n          currencies={currencies}\n          onAmountChange={handleToAmountChange}\n          onCurrencyChange={handleToCurrencyChange}\n        />\n      </div>\n      <button\n        className={classNames('exchanger__submit-button', {\n          'exchanger__submit-button--enabled': !isExceeding,\n        })}\n        disabled={isExceeding}\n        type=\"button\"\n        onClick={handleExchange}\n      >\n        Exchange\n      </button>\n    </div>\n  );\n};\n\nExchanger.whyDidYouRender = {\n  // logOnDifferentValues: true,\n};\n\nexport default Exchanger;\n"]},"metadata":{},"sourceType":"module"}