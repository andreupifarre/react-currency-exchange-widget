{"ast":null,"code":"var _jsxFileName = \"/Users/andreu/Documents/Revolut/react-currency-exchange-widget/src/components/Exchanger/Exchanger.js\";\nimport React, { useState, useEffect } from 'react';\nimport classNames from 'classnames';\nimport useInterval from '../../hooks/useInterval';\nimport useBalances from '../../hooks/useBalances'; // import useFetchRates from '../../hooks/useFetchRates';\n\nimport ExchangerRow from '../ExchangerRow/ExchangerRow';\nimport ExchangerBar from '../ExchangerBar/ExchangerBar';\nimport './Exchanger.scss';\nconst DEFAULT_FROM_CURRENCY = 'GBP';\nconst DEFAULT_TO_CURRENCY = 'EUR';\nconst EXCHANGE_FEE = 0.005;\nconst MIMIMUM_AMOUNT = 0.1;\nconst ALLOWANCE_LIMIT = 1000;\nconst FETCH_INTERVAL = 10000000; //10000;\n\nconst Exchanger = () => {\n  const balances = useBalances();\n  const interval = useInterval(FETCH_INTERVAL);\n  const [fromCurrency, setFromCurrency] = useState(DEFAULT_FROM_CURRENCY);\n  const [toCurrency, setToCurrency] = useState(DEFAULT_TO_CURRENCY);\n  const [rates, setRates] = useState(null);\n  const [fromAmount, setFromAmount] = useState();\n  const [toAmount, setToAmount] = useState();\n  const [isExceeding, setIsExceeding] = useState(true);\n  const [fromInfo, setFromInfo] = useState('');\n  const [toInfo, setToInfo] = useState('');\n  const [currencies, setCurrencies] = useState(balances.fetch());\n  const selectedFromCurrency = currencies.find(c => c.code === fromCurrency);\n  const selectedToCurrency = currencies.find(c => c.code === toCurrency);\n\n  const convertFromTo = (currency, amount) => rates ? balances.convertFromTo(amount, rates[currency]) : '';\n\n  const convertToFrom = (currency, amount) => rates ? balances.convertToFrom(amount, rates[currency]) : '';\n\n  const calculate = (amount, currency) => {\n    const {\n      isAllowedToExchange,\n      fromInfo,\n      toInfo\n    } = balances.calculate(amount, currency.balance, currency.sign);\n    setIsExceeding(isAllowedToExchange);\n    setFromInfo(fromInfo);\n    setToInfo(toInfo);\n  };\n\n  const handleSwap = () => {\n    setFromCurrency(toCurrency);\n    setToCurrency(fromCurrency);\n    setFromAmount(toAmount);\n    setToAmount(fromAmount);\n    calculate(toAmount, selectedToCurrency);\n  };\n\n  const handleFromCurrencyChange = currency => {\n    if (currency === toCurrency) {\n      setToCurrency(fromCurrency);\n      calculate(toAmount, selectedToCurrency);\n    }\n\n    setFromCurrency(currency);\n  };\n\n  const handleToCurrencyChange = currency => {\n    if (currency === fromCurrency) {\n      setFromCurrency(toCurrency);\n      calculate(toAmount, selectedToCurrency);\n    }\n\n    setToCurrency(currency);\n    setToAmount(convertFromTo(currency, fromAmount));\n  };\n\n  const handleFromAmountChange = amount => {\n    setFromAmount(amount);\n    setToAmount(convertFromTo(toCurrency, amount));\n    calculate(amount, selectedFromCurrency);\n  };\n\n  const handleToAmountChange = amount => {\n    setToAmount(amount);\n    setFromAmount(convertToFrom(toCurrency, amount));\n    calculate(amount, selectedFromCurrency);\n  };\n\n  const handleExchange = () => {\n    const newCurrencies = balances.exchange(currencies, fromCurrency, toCurrency, fromAmount, toAmount);\n    setCurrencies(newCurrencies);\n    setFromAmount();\n    setToAmount();\n    setIsExceeding(false);\n  };\n\n  useEffect(() => {\n    const fetchData = async () => {\n      const url = `https://openexchangerates.org/api/latest.json?app_id=81fa12e332b74f45a1de4a276db7c0d1&base=${fromCurrency}`;\n      const response = await fetch(url);\n      const data = await response.json();\n      setRates(data.rates);\n    };\n\n    fetchData();\n  }, [fromCurrency, interval]);\n  useEffect(() => {\n    setToAmount(convertFromTo(toCurrency, fromAmount)); // eslint-disable-next-line\n  }, [rates]);\n  return React.createElement(\"div\", {\n    className: \"exchanger\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"exchanger__row\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124\n    },\n    __self: this\n  }, React.createElement(ExchangerRow, {\n    balance: selectedFromCurrency.balance,\n    currency: selectedFromCurrency.code,\n    sign: selectedFromCurrency.sign,\n    amount: fromAmount,\n    info: fromInfo,\n    currencies: currencies,\n    onAmountChange: handleFromAmountChange,\n    onCurrencyChange: handleFromCurrencyChange,\n    autoFocus: true,\n    alt: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"exchanger__bar\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138\n    },\n    __self: this\n  }, React.createElement(ExchangerBar, {\n    onSwap: handleSwap,\n    fromSign: selectedFromCurrency.sign,\n    toSign: selectedToCurrency.sign,\n    rate: rates && rates[toCurrency],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"exchanger__row\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146\n    },\n    __self: this\n  }, React.createElement(ExchangerRow, {\n    balance: selectedToCurrency.balance,\n    currency: selectedToCurrency.code,\n    sign: selectedToCurrency.sign,\n    amount: toAmount,\n    info: toInfo,\n    currencies: currencies,\n    onAmountChange: handleToAmountChange,\n    onCurrencyChange: handleToCurrencyChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147\n    },\n    __self: this\n  })), React.createElement(\"button\", {\n    className: classNames('exchanger__submit-button', {\n      'exchanger__submit-button--enabled': !isExceeding\n    }),\n    disabled: isExceeding,\n    type: \"button\",\n    onClick: handleExchange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158\n    },\n    __self: this\n  }, \"Exchange\"));\n};\n\nExchanger.whyDidYouRender = {// logOnDifferentValues: true,\n};\nexport default Exchanger;","map":{"version":3,"sources":["/Users/andreu/Documents/Revolut/react-currency-exchange-widget/src/components/Exchanger/Exchanger.js"],"names":["React","useState","useEffect","classNames","useInterval","useBalances","ExchangerRow","ExchangerBar","DEFAULT_FROM_CURRENCY","DEFAULT_TO_CURRENCY","EXCHANGE_FEE","MIMIMUM_AMOUNT","ALLOWANCE_LIMIT","FETCH_INTERVAL","Exchanger","balances","interval","fromCurrency","setFromCurrency","toCurrency","setToCurrency","rates","setRates","fromAmount","setFromAmount","toAmount","setToAmount","isExceeding","setIsExceeding","fromInfo","setFromInfo","toInfo","setToInfo","currencies","setCurrencies","fetch","selectedFromCurrency","find","c","code","selectedToCurrency","convertFromTo","currency","amount","convertToFrom","calculate","isAllowedToExchange","balance","sign","handleSwap","handleFromCurrencyChange","handleToCurrencyChange","handleFromAmountChange","handleToAmountChange","handleExchange","newCurrencies","exchange","fetchData","url","response","data","json","whyDidYouRender"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,UAAP,MAAuB,YAAvB;AACA,OAAOC,WAAP,MAAwB,yBAAxB;AACA,OAAOC,WAAP,MAAwB,yBAAxB,C,CACA;;AACA,OAAOC,YAAP,MAAyB,8BAAzB;AACA,OAAOC,YAAP,MAAyB,8BAAzB;AAEA,OAAO,kBAAP;AAEA,MAAMC,qBAAqB,GAAG,KAA9B;AACA,MAAMC,mBAAmB,GAAG,KAA5B;AACA,MAAMC,YAAY,GAAG,KAArB;AACA,MAAMC,cAAc,GAAG,GAAvB;AACA,MAAMC,eAAe,GAAG,IAAxB;AACA,MAAMC,cAAc,GAAG,QAAvB,C,CAAiC;;AAEjC,MAAMC,SAAS,GAAG,MAAM;AACtB,QAAMC,QAAQ,GAAGV,WAAW,EAA5B;AACA,QAAMW,QAAQ,GAAGZ,WAAW,CAACS,cAAD,CAA5B;AACA,QAAM,CAACI,YAAD,EAAeC,eAAf,IAAkCjB,QAAQ,CAACO,qBAAD,CAAhD;AACA,QAAM,CAACW,UAAD,EAAaC,aAAb,IAA8BnB,QAAQ,CAACQ,mBAAD,CAA5C;AACA,QAAM,CAACY,KAAD,EAAQC,QAAR,IAAoBrB,QAAQ,CAAC,IAAD,CAAlC;AACA,QAAM,CAACsB,UAAD,EAAaC,aAAb,IAA8BvB,QAAQ,EAA5C;AACA,QAAM,CAACwB,QAAD,EAAWC,WAAX,IAA0BzB,QAAQ,EAAxC;AACA,QAAM,CAAC0B,WAAD,EAAcC,cAAd,IAAgC3B,QAAQ,CAAC,IAAD,CAA9C;AACA,QAAM,CAAC4B,QAAD,EAAWC,WAAX,IAA0B7B,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAAC8B,MAAD,EAASC,SAAT,IAAsB/B,QAAQ,CAAC,EAAD,CAApC;AACA,QAAM,CAACgC,UAAD,EAAaC,aAAb,IAA8BjC,QAAQ,CAACc,QAAQ,CAACoB,KAAT,EAAD,CAA5C;AAEA,QAAMC,oBAAoB,GAAGH,UAAU,CAACI,IAAX,CAAiBC,CAAD,IAAOA,CAAC,CAACC,IAAF,KAAWtB,YAAlC,CAA7B;AACA,QAAMuB,kBAAkB,GAAGP,UAAU,CAACI,IAAX,CAAiBC,CAAD,IAAOA,CAAC,CAACC,IAAF,KAAWpB,UAAlC,CAA3B;;AAEA,QAAMsB,aAAa,GAAG,CAACC,QAAD,EAAWC,MAAX,KACpBtB,KAAK,GAAGN,QAAQ,CAAC0B,aAAT,CAAuBE,MAAvB,EAA+BtB,KAAK,CAACqB,QAAD,CAApC,CAAH,GAAqD,EAD5D;;AAGA,QAAME,aAAa,GAAG,CAACF,QAAD,EAAWC,MAAX,KACpBtB,KAAK,GAAGN,QAAQ,CAAC6B,aAAT,CAAuBD,MAAvB,EAA+BtB,KAAK,CAACqB,QAAD,CAApC,CAAH,GAAqD,EAD5D;;AAGA,QAAMG,SAAS,GAAG,CAACF,MAAD,EAASD,QAAT,KAAsB;AACtC,UAAM;AAAEI,MAAAA,mBAAF;AAAuBjB,MAAAA,QAAvB;AAAiCE,MAAAA;AAAjC,QAA4ChB,QAAQ,CAAC8B,SAAT,CAChDF,MADgD,EAEhDD,QAAQ,CAACK,OAFuC,EAGhDL,QAAQ,CAACM,IAHuC,CAAlD;AAMApB,IAAAA,cAAc,CAACkB,mBAAD,CAAd;AACAhB,IAAAA,WAAW,CAACD,QAAD,CAAX;AACAG,IAAAA,SAAS,CAACD,MAAD,CAAT;AACD,GAVD;;AAYA,QAAMkB,UAAU,GAAG,MAAM;AACvB/B,IAAAA,eAAe,CAACC,UAAD,CAAf;AACAC,IAAAA,aAAa,CAACH,YAAD,CAAb;AACAO,IAAAA,aAAa,CAACC,QAAD,CAAb;AACAC,IAAAA,WAAW,CAACH,UAAD,CAAX;AACAsB,IAAAA,SAAS,CAACpB,QAAD,EAAWe,kBAAX,CAAT;AACD,GAND;;AAQA,QAAMU,wBAAwB,GAAIR,QAAD,IAAc;AAC7C,QAAIA,QAAQ,KAAKvB,UAAjB,EAA6B;AAC3BC,MAAAA,aAAa,CAACH,YAAD,CAAb;AACA4B,MAAAA,SAAS,CAACpB,QAAD,EAAWe,kBAAX,CAAT;AACD;;AAEDtB,IAAAA,eAAe,CAACwB,QAAD,CAAf;AACD,GAPD;;AASA,QAAMS,sBAAsB,GAAIT,QAAD,IAAc;AAC3C,QAAIA,QAAQ,KAAKzB,YAAjB,EAA+B;AAC7BC,MAAAA,eAAe,CAACC,UAAD,CAAf;AACA0B,MAAAA,SAAS,CAACpB,QAAD,EAAWe,kBAAX,CAAT;AACD;;AAEDpB,IAAAA,aAAa,CAACsB,QAAD,CAAb;AACAhB,IAAAA,WAAW,CAACe,aAAa,CAACC,QAAD,EAAWnB,UAAX,CAAd,CAAX;AACD,GARD;;AAUA,QAAM6B,sBAAsB,GAAIT,MAAD,IAAY;AACzCnB,IAAAA,aAAa,CAACmB,MAAD,CAAb;AACAjB,IAAAA,WAAW,CAACe,aAAa,CAACtB,UAAD,EAAawB,MAAb,CAAd,CAAX;AACAE,IAAAA,SAAS,CAACF,MAAD,EAASP,oBAAT,CAAT;AACD,GAJD;;AAMA,QAAMiB,oBAAoB,GAAIV,MAAD,IAAY;AACvCjB,IAAAA,WAAW,CAACiB,MAAD,CAAX;AACAnB,IAAAA,aAAa,CAACoB,aAAa,CAACzB,UAAD,EAAawB,MAAb,CAAd,CAAb;AACAE,IAAAA,SAAS,CAACF,MAAD,EAASP,oBAAT,CAAT;AACD,GAJD;;AAMA,QAAMkB,cAAc,GAAG,MAAM;AAC3B,UAAMC,aAAa,GAAGxC,QAAQ,CAACyC,QAAT,CACpBvB,UADoB,EAEpBhB,YAFoB,EAGpBE,UAHoB,EAIpBI,UAJoB,EAKpBE,QALoB,CAAtB;AAQAS,IAAAA,aAAa,CAACqB,aAAD,CAAb;AACA/B,IAAAA,aAAa;AACbE,IAAAA,WAAW;AACXE,IAAAA,cAAc,CAAC,KAAD,CAAd;AACD,GAbD;;AAeA1B,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMuD,SAAS,GAAG,YAAY;AAC5B,YAAMC,GAAG,GAAI,8FAA6FzC,YAAa,EAAvH;AACA,YAAM0C,QAAQ,GAAG,MAAMxB,KAAK,CAACuB,GAAD,CAA5B;AACA,YAAME,IAAI,GAAG,MAAMD,QAAQ,CAACE,IAAT,EAAnB;AACAvC,MAAAA,QAAQ,CAACsC,IAAI,CAACvC,KAAN,CAAR;AACD,KALD;;AAOAoC,IAAAA,SAAS;AACV,GATQ,EASN,CAACxC,YAAD,EAAeD,QAAf,CATM,CAAT;AAWAd,EAAAA,SAAS,CAAC,MAAM;AACdwB,IAAAA,WAAW,CAACe,aAAa,CAACtB,UAAD,EAAaI,UAAb,CAAd,CAAX,CADc,CAEd;AACD,GAHQ,EAGN,CAACF,KAAD,CAHM,CAAT;AAKA,SACE;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,YAAD;AACE,IAAA,OAAO,EAAEe,oBAAoB,CAACW,OADhC;AAEE,IAAA,QAAQ,EAAEX,oBAAoB,CAACG,IAFjC;AAGE,IAAA,IAAI,EAAEH,oBAAoB,CAACY,IAH7B;AAIE,IAAA,MAAM,EAAEzB,UAJV;AAKE,IAAA,IAAI,EAAEM,QALR;AAME,IAAA,UAAU,EAAEI,UANd;AAOE,IAAA,cAAc,EAAEmB,sBAPlB;AAQE,IAAA,gBAAgB,EAAEF,wBARpB;AASE,IAAA,SAAS,MATX;AAUE,IAAA,GAAG,MAVL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,EAeE;AAAK,IAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,YAAD;AACE,IAAA,MAAM,EAAED,UADV;AAEE,IAAA,QAAQ,EAAEb,oBAAoB,CAACY,IAFjC;AAGE,IAAA,MAAM,EAAER,kBAAkB,CAACQ,IAH7B;AAIE,IAAA,IAAI,EAAE3B,KAAK,IAAIA,KAAK,CAACF,UAAD,CAJtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAfF,EAuBE;AAAK,IAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,YAAD;AACE,IAAA,OAAO,EAAEqB,kBAAkB,CAACO,OAD9B;AAEE,IAAA,QAAQ,EAAEP,kBAAkB,CAACD,IAF/B;AAGE,IAAA,IAAI,EAAEC,kBAAkB,CAACQ,IAH3B;AAIE,IAAA,MAAM,EAAEvB,QAJV;AAKE,IAAA,IAAI,EAAEM,MALR;AAME,IAAA,UAAU,EAAEE,UANd;AAOE,IAAA,cAAc,EAAEoB,oBAPlB;AAQE,IAAA,gBAAgB,EAAEF,sBARpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAvBF,EAmCE;AACE,IAAA,SAAS,EAAEhD,UAAU,CAAC,0BAAD,EAA6B;AAChD,2CAAqC,CAACwB;AADU,KAA7B,CADvB;AAIE,IAAA,QAAQ,EAAEA,WAJZ;AAKE,IAAA,IAAI,EAAC,QALP;AAME,IAAA,OAAO,EAAE2B,cANX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAnCF,CADF;AAgDD,CAxJD;;AA0JAxC,SAAS,CAACgD,eAAV,GAA4B,CAC1B;AAD0B,CAA5B;AAIA,eAAehD,SAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport classNames from 'classnames';\nimport useInterval from '../../hooks/useInterval';\nimport useBalances from '../../hooks/useBalances';\n// import useFetchRates from '../../hooks/useFetchRates';\nimport ExchangerRow from '../ExchangerRow/ExchangerRow';\nimport ExchangerBar from '../ExchangerBar/ExchangerBar';\n\nimport './Exchanger.scss';\n\nconst DEFAULT_FROM_CURRENCY = 'GBP';\nconst DEFAULT_TO_CURRENCY = 'EUR';\nconst EXCHANGE_FEE = 0.005;\nconst MIMIMUM_AMOUNT = 0.1;\nconst ALLOWANCE_LIMIT = 1000;\nconst FETCH_INTERVAL = 10000000; //10000;\n\nconst Exchanger = () => {\n  const balances = useBalances();\n  const interval = useInterval(FETCH_INTERVAL);\n  const [fromCurrency, setFromCurrency] = useState(DEFAULT_FROM_CURRENCY);\n  const [toCurrency, setToCurrency] = useState(DEFAULT_TO_CURRENCY);\n  const [rates, setRates] = useState(null);\n  const [fromAmount, setFromAmount] = useState();\n  const [toAmount, setToAmount] = useState();\n  const [isExceeding, setIsExceeding] = useState(true);\n  const [fromInfo, setFromInfo] = useState('');\n  const [toInfo, setToInfo] = useState('');\n  const [currencies, setCurrencies] = useState(balances.fetch());\n\n  const selectedFromCurrency = currencies.find((c) => c.code === fromCurrency);\n  const selectedToCurrency = currencies.find((c) => c.code === toCurrency);\n\n  const convertFromTo = (currency, amount) =>\n    rates ? balances.convertFromTo(amount, rates[currency]) : '';\n\n  const convertToFrom = (currency, amount) =>\n    rates ? balances.convertToFrom(amount, rates[currency]) : '';\n\n  const calculate = (amount, currency) => {\n    const { isAllowedToExchange, fromInfo, toInfo } = balances.calculate(\n      amount,\n      currency.balance,\n      currency.sign,\n    );\n\n    setIsExceeding(isAllowedToExchange);\n    setFromInfo(fromInfo);\n    setToInfo(toInfo);\n  };\n\n  const handleSwap = () => {\n    setFromCurrency(toCurrency);\n    setToCurrency(fromCurrency);\n    setFromAmount(toAmount);\n    setToAmount(fromAmount);\n    calculate(toAmount, selectedToCurrency);\n  };\n\n  const handleFromCurrencyChange = (currency) => {\n    if (currency === toCurrency) {\n      setToCurrency(fromCurrency);\n      calculate(toAmount, selectedToCurrency);\n    }\n\n    setFromCurrency(currency);\n  };\n\n  const handleToCurrencyChange = (currency) => {\n    if (currency === fromCurrency) {\n      setFromCurrency(toCurrency);\n      calculate(toAmount, selectedToCurrency);\n    }\n\n    setToCurrency(currency);\n    setToAmount(convertFromTo(currency, fromAmount));\n  };\n\n  const handleFromAmountChange = (amount) => {\n    setFromAmount(amount);\n    setToAmount(convertFromTo(toCurrency, amount));\n    calculate(amount, selectedFromCurrency);\n  };\n\n  const handleToAmountChange = (amount) => {\n    setToAmount(amount);\n    setFromAmount(convertToFrom(toCurrency, amount));\n    calculate(amount, selectedFromCurrency);\n  };\n\n  const handleExchange = () => {\n    const newCurrencies = balances.exchange(\n      currencies,\n      fromCurrency,\n      toCurrency,\n      fromAmount,\n      toAmount,\n    );\n\n    setCurrencies(newCurrencies);\n    setFromAmount();\n    setToAmount();\n    setIsExceeding(false);\n  };\n\n  useEffect(() => {\n    const fetchData = async () => {\n      const url = `https://openexchangerates.org/api/latest.json?app_id=81fa12e332b74f45a1de4a276db7c0d1&base=${fromCurrency}`;\n      const response = await fetch(url);\n      const data = await response.json();\n      setRates(data.rates);\n    };\n\n    fetchData();\n  }, [fromCurrency, interval]);\n\n  useEffect(() => {\n    setToAmount(convertFromTo(toCurrency, fromAmount));\n    // eslint-disable-next-line\n  }, [rates]);\n\n  return (\n    <div className=\"exchanger\">\n      <div className=\"exchanger__row\">\n        <ExchangerRow\n          balance={selectedFromCurrency.balance}\n          currency={selectedFromCurrency.code}\n          sign={selectedFromCurrency.sign}\n          amount={fromAmount}\n          info={fromInfo}\n          currencies={currencies}\n          onAmountChange={handleFromAmountChange}\n          onCurrencyChange={handleFromCurrencyChange}\n          autoFocus\n          alt\n        />\n      </div>\n      <div className=\"exchanger__bar\">\n        <ExchangerBar\n          onSwap={handleSwap}\n          fromSign={selectedFromCurrency.sign}\n          toSign={selectedToCurrency.sign}\n          rate={rates && rates[toCurrency]}\n        />\n      </div>\n      <div className=\"exchanger__row\">\n        <ExchangerRow\n          balance={selectedToCurrency.balance}\n          currency={selectedToCurrency.code}\n          sign={selectedToCurrency.sign}\n          amount={toAmount}\n          info={toInfo}\n          currencies={currencies}\n          onAmountChange={handleToAmountChange}\n          onCurrencyChange={handleToCurrencyChange}\n        />\n      </div>\n      <button\n        className={classNames('exchanger__submit-button', {\n          'exchanger__submit-button--enabled': !isExceeding,\n        })}\n        disabled={isExceeding}\n        type=\"button\"\n        onClick={handleExchange}\n      >\n        Exchange\n      </button>\n    </div>\n  );\n};\n\nExchanger.whyDidYouRender = {\n  // logOnDifferentValues: true,\n};\n\nexport default Exchanger;\n"]},"metadata":{},"sourceType":"module"}