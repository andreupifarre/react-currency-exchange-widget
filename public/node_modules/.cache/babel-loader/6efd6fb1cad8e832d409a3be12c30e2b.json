{"ast":null,"code":"var _jsxFileName = \"/Users/andreu/Documents/Revolut/react-currency-exchange-widget/src/components/ExchangerRow/ExchangerRow.js\";\nimport React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport useDebounce from '../../hooks/useDebounce';\nimport useFetchData from '../../hooks/useFetchData';\nimport CurrencyDropdown from '../CurrencyDropdown/CurrencyDropdown';\nimport './ExchangerRow.scss';\n\nconst ExchangerRow = ({\n  alt,\n  balance,\n  currency,\n  sign,\n  amount,\n  currencies,\n  setCurrency,\n  setAmount,\n  setActiveCurrency\n}) => {\n  // const [locations, noResults] = useFetchData(useDebounce(v));\n  const handleChange = e => {\n    setAmount(parseFloat(e.target.value || 0));\n    setActiveCurrency(currency);\n  };\n\n  return React.createElement(\"div\", {\n    className: \"exchanger-row\",\n    style: {\n      backgroundColor: alt ? 'white' : 'transparent'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"exchanger-row__line\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, React.createElement(CurrencyDropdown, {\n    currency: currency,\n    currencies: currencies,\n    setCurrency: setCurrency,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }), React.createElement(\"input\", {\n    type: \"text\",\n    className: \"exchanger-row__amount\",\n    autoComplete: \"off\",\n    placeholder: \"0\",\n    onChange: handleChange,\n    value: amount,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"exchanger-row__line\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    className: \"exchanger-row__balance\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, \"Balance:\", balance), React.createElement(\"span\", {\n    className: \"exchanger-row__fee\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, \"Fee: \", '$12,5675.73')));\n};\n\nexport default ExchangerRow;\nExchangerRow.defaultProps = {\n  alt: false,\n  balance: '',\n  currency: '',\n  sign: '',\n  amount: 0,\n  currencies: [],\n  setCurrency: () => {},\n  setAmount: () => {},\n  setActiveCurrency: () => {}\n};\nExchangerRow.propTypes = {\n  alt: PropTypes.bool.isRequired,\n  balance: PropTypes.string.isRequired,\n  currency: PropTypes.string.isRequired,\n  sign: PropTypes.string.isRequired,\n  amount: PropTypes.number.isRequired,\n  currencies: PropTypes.array.isRequired,\n  setCurrency: PropTypes.func.isRequired,\n  setAmount: PropTypes.func.isRequired,\n  setActiveCurrency: PropTypes.func.isRequired\n};","map":{"version":3,"sources":["/Users/andreu/Documents/Revolut/react-currency-exchange-widget/src/components/ExchangerRow/ExchangerRow.js"],"names":["React","useState","PropTypes","useDebounce","useFetchData","CurrencyDropdown","ExchangerRow","alt","balance","currency","sign","amount","currencies","setCurrency","setAmount","setActiveCurrency","handleChange","e","parseFloat","target","value","backgroundColor","defaultProps","propTypes","bool","isRequired","string","number","array","func"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport useDebounce from '../../hooks/useDebounce';\nimport useFetchData from '../../hooks/useFetchData';\nimport CurrencyDropdown from '../CurrencyDropdown/CurrencyDropdown';\nimport './ExchangerRow.scss';\n\nconst ExchangerRow = ({\n  alt,\n  balance,\n  currency,\n  sign,\n  amount,\n  currencies,\n  setCurrency,\n  setAmount,\n  setActiveCurrency,\n}) => {\n  // const [locations, noResults] = useFetchData(useDebounce(v));\n\n  const handleChange = (e) => {\n    setAmount(parseFloat(e.target.value || 0));\n    setActiveCurrency(currency);\n  };\n\n  return (\n    <div\n      className=\"exchanger-row\"\n      style={{ backgroundColor: alt ? 'white' : 'transparent' }}\n    >\n      <div className=\"exchanger-row__line\">\n        <CurrencyDropdown\n          currency={currency}\n          currencies={currencies}\n          setCurrency={setCurrency}\n        />\n        <input\n          type=\"text\"\n          className=\"exchanger-row__amount\"\n          autoComplete=\"off\"\n          placeholder=\"0\"\n          onChange={handleChange}\n          value={amount}\n        />\n      </div>\n      <div className=\"exchanger-row__line\">\n        <span className=\"exchanger-row__balance\">\n          Balance:\n          {balance}\n        </span>\n        <span className=\"exchanger-row__fee\">Fee: {'$12,5675.73'}</span>\n      </div>\n    </div>\n  );\n};\n\nexport default ExchangerRow;\n\nExchangerRow.defaultProps = {\n  alt: false,\n  balance: '',\n  currency: '',\n  sign: '',\n  amount: 0,\n  currencies: [],\n  setCurrency: () => {},\n  setAmount: () => {},\n  setActiveCurrency: () => {},\n};\n\nExchangerRow.propTypes = {\n  alt: PropTypes.bool.isRequired,\n  balance: PropTypes.string.isRequired,\n  currency: PropTypes.string.isRequired,\n  sign: PropTypes.string.isRequired,\n  amount: PropTypes.number.isRequired,\n  currencies: PropTypes.array.isRequired,\n  setCurrency: PropTypes.func.isRequired,\n  setAmount: PropTypes.func.isRequired,\n  setActiveCurrency: PropTypes.func.isRequired,\n};\n"]},"metadata":{},"sourceType":"module"}