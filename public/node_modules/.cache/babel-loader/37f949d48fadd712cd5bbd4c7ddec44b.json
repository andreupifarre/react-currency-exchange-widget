{"ast":null,"code":"import { useState, useEffect } from 'react';\n\nconst useFetchData = currency => {\n  const [results, setResults] = useState([]);\n  useEffect(() => {\n    if (currency) {\n      const fetchData = async () => {\n        const url = `https://openexchangerates.org/api/latest.json?app_id=81fa12e332b74f45a1de4a276db7c0d1&base=${currency}`;\n        const response = await fetch(url);\n        const data = await response.json();\n        const isNoFound = data.results.numFound === 0;\n        setNoResults(isNoFound);\n        setResults(isNoFound ? [] : data.results.docs);\n      };\n\n      fetchData();\n    } else {\n      setResults([]);\n      setNoResults(false);\n    }\n  }, [currency]);\n  return [results, noResults];\n};\n\nexport default useFetchData;","map":{"version":3,"sources":["/Users/andreu/Documents/Revolut/react-currency-exchange-widget/src/hooks/useFetchData.js"],"names":["useState","useEffect","useFetchData","currency","results","setResults","fetchData","url","response","fetch","data","json","isNoFound","numFound","setNoResults","docs","noResults"],"mappings":"AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;;AAEA,MAAMC,YAAY,GAAIC,QAAD,IAAc;AACjC,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBL,QAAQ,CAAC,EAAD,CAAtC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIE,QAAJ,EAAc;AACZ,YAAMG,SAAS,GAAG,YAAY;AAC5B,cAAMC,GAAG,GAAI,8FAA6FJ,QAAS,EAAnH;AACA,cAAMK,QAAQ,GAAG,MAAMC,KAAK,CAACF,GAAD,CAA5B;AACA,cAAMG,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAAnB;AACA,cAAMC,SAAS,GAAGF,IAAI,CAACN,OAAL,CAAaS,QAAb,KAA0B,CAA5C;AACAC,QAAAA,YAAY,CAACF,SAAD,CAAZ;AACAP,QAAAA,UAAU,CAACO,SAAS,GAAG,EAAH,GAAQF,IAAI,CAACN,OAAL,CAAaW,IAA/B,CAAV;AACD,OAPD;;AASAT,MAAAA,SAAS;AACV,KAXD,MAWO;AACLD,MAAAA,UAAU,CAAC,EAAD,CAAV;AACAS,MAAAA,YAAY,CAAC,KAAD,CAAZ;AACD;AACF,GAhBQ,EAgBN,CAACX,QAAD,CAhBM,CAAT;AAkBA,SAAO,CAACC,OAAD,EAAUY,SAAV,CAAP;AACD,CAtBD;;AAwBA,eAAed,YAAf","sourcesContent":["import { useState, useEffect } from 'react';\n\nconst useFetchData = (currency) => {\n  const [results, setResults] = useState([]);\n\n  useEffect(() => {\n    if (currency) {\n      const fetchData = async () => {\n        const url = `https://openexchangerates.org/api/latest.json?app_id=81fa12e332b74f45a1de4a276db7c0d1&base=${currency}`;\n        const response = await fetch(url);\n        const data = await response.json();\n        const isNoFound = data.results.numFound === 0;\n        setNoResults(isNoFound);\n        setResults(isNoFound ? [] : data.results.docs);\n      };\n\n      fetchData();\n    } else {\n      setResults([]);\n      setNoResults(false);\n    }\n  }, [currency]);\n\n  return [results, noResults];\n};\n\nexport default useFetchData;\n"]},"metadata":{},"sourceType":"module"}