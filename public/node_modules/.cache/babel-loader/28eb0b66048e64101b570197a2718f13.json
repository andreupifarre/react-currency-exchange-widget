{"ast":null,"code":"var _jsxFileName = \"/Users/andreu/Documents/Revolut/react-currency-exchange-widget/src/components/Exchanger/Exchanger.js\";\nimport React, { useState, useEffect } from 'react';\nimport classNames from 'classnames';\nimport useInterval from '../../hooks/useInterval'; // import useFetchRates from '../../hooks/useFetchRates';\n\nimport ExchangerRow from '../ExchangerRow/ExchangerRow';\nimport './Exchanger.scss';\nconst defaultFromCurrency = 'GBP';\nconst defaultToCurrency = 'EUR';\n\nconst Exchanger = () => {\n  const [fromCurrency, setFromCurrency] = useState(defaultFromCurrency);\n  const [toCurrency, setToCurrency] = useState(defaultToCurrency); // const rate = useFetchRates(fromCurrency, toCurrency, useInterval(10000));\n  // const ratesFetched = useFetchRates(0);\n\n  const interval = useInterval(10000);\n  const [rates, setRates] = useState([]); // const rate = useFetchRates(fromCurrency, toCurrency);\n  // console.log(fromCurrency, toCurrency, rate);\n\n  const [fromAmount, setFromAmount] = useState(0);\n  const [toAmount, setToAmount] = useState(0);\n  const [isExceeding, setIsExceeding] = useState(false);\n  const [fromInfo, setFromInfo] = useState('');\n  const [toInfo, setToInfo] = useState(''); // const [activeCurrency, setActiveCurrency] = useState(defaultFromCurrency);\n  // const [fromRate, setFromRate] = useState(1);\n  // const [toRate, setToRate] = useState(rate);\n\n  const [currencies, setCurrencies] = useState([{\n    code: 'GBP',\n    balance: 10,\n    sign: '£'\n  }, {\n    code: 'EUR',\n    balance: 0,\n    sign: '€'\n  }, {\n    code: 'USD',\n    balance: 0,\n    sign: '$'\n  }]);\n  const selectedFromCurrency = currencies.find(item => item.code === fromCurrency);\n  const selectedToCurrency = currencies.find(item => item.code === toCurrency);\n\n  const convertFromTo = (currency, amount) => parseFloat((amount * rates[currency]).toFixed(2));\n\n  const convertToFrom = (currency, amount) => parseFloat((amount / rates[currency]).toFixed(2));\n\n  const formatRate = () => {\n    return rates[toCurrency] ? parseFloat(rates[toCurrency].toFixed(4)) : null;\n  };\n\n  const handleSwap = () => {//   setFromCurrency(toCurrency);\n    //   setToCurrency(fromCurrency);\n    //   setFromAmount(toAmount);\n    //   setToAmount(fromAmount);\n    //   // setFromRate(toRate);\n    //   // setToRate(fromRate);\n  };\n\n  const handleFromCurrencyChange = currency => {\n    setFromCurrency(currency);\n    setToInfo(fromAmount > 1000 ? `Fee: ${toAmount * 0.2}` : 'ssss');\n    console.log(fromAmount > 1000); // setToAmount(convertFromTo(currency, fromAmount));\n    // setFromAmount(convertToFrom(toAmount));\n  };\n\n  const handleToCurrencyChange = currency => {\n    setToCurrency(currency);\n    setToAmount(convertFromTo(currency, fromAmount)); // setFromAmount(convertToFrom(toAmount));\n  };\n\n  const handleFromAmountChange = amount => {\n    setFromAmount(amount);\n    setToAmount(convertFromTo(toCurrency, amount));\n    const floatAmount = parseFloat(amount);\n    const isExceeding = floatAmount > selectedFromCurrency.balance;\n    setIsExceeding(isExceeding || !floatAmount);\n    setFromInfo(isExceeding ? 'exceeds balance' : '');\n  };\n\n  const handleToAmountChange = amount => {\n    setToAmount(amount);\n    setFromAmount(convertToFrom(toCurrency, amount));\n  };\n\n  const handleExchange = () => {\n    const newCurrencies = currencies.map(item => {\n      if (item.code === fromCurrency) {\n        return { ...item,\n          balance: item.balance - parseFloat(fromAmount)\n        };\n      } else if (item.code === toCurrency) {\n        return { ...item,\n          balance: item.balance + parseFloat(toAmount)\n        };\n      } else {\n        return item;\n      }\n    });\n    setCurrencies(newCurrencies);\n    setFromAmount();\n    setToAmount();\n    setIsExceeding(false);\n  };\n\n  useEffect(() => {\n    const fetchData = async () => {\n      // const url = `https://openexchangerates.org/api/latest.json?app_id=81fa12e332b74f45a1de4a276db7c0d1&base=${fromCurrency}`;\n      // const response = await fetch(url);\n      // const data = await response.json();\n      // setRates(data.rates);\n      const data = {\n        rates: {\n          timestamp: 1602612000,\n          base: 'GBP',\n          rates: {\n            AED: 4.751695,\n            AFN: 99.548862,\n            ALL: 136.186343,\n            AMD: 623.058422,\n            ANG: 2.322443,\n            AOA: 833.299623,\n            ARS: 100.149049,\n            AUD: 1.808271,\n            AWG: 2.328628,\n            AZN: 2.202494,\n            BAM: 2.146139,\n            BBD: 2.587365,\n            BDT: 109.70939,\n            BGN: 2.154315,\n            BHD: 0.487851,\n            BIF: 2503.27538,\n            BMD: 1.293682,\n            BND: 1.756893,\n            BOB: 8.94028,\n            BRL: 7.216806,\n            BSD: 1.293682,\n            BTC: 0.00011381251,\n            BTN: 94.863652,\n            BWP: 14.811951,\n            BYN: 3.32461,\n            BZD: 2.607961,\n            CAD: 1.699635,\n            CDF: 2154.627983,\n            CHF: 1.183982,\n            CLF: 0.037451,\n            CLP: 1033.392327,\n            CNH: 8.72151,\n            CNY: 8.727958,\n            COP: 4998.788667,\n            CRC: 779.897266,\n            CUC: 1.293721,\n            CUP: 33.312321,\n            CVE: 121.994247,\n            CZK: 30.174365,\n            DJF: 230.334939,\n            DKK: 8.203837,\n            DOP: 75.680418,\n            DZD: 166.903159,\n            EGP: 20.300076,\n            ERN: 19.405025,\n            ETB: 47.827437,\n            EUR: 1.102125,\n            FJD: 2.76848,\n            FKP: 1,\n            GBP: 1,\n            GEL: 4.172126,\n            GGP: 1,\n            GHS: 7.529231,\n            GIP: 1,\n            GMD: 66.973936,\n            GNF: 12632.808316,\n            GTQ: 10.065894,\n            GYD: 270.68286,\n            HKD: 10.026223,\n            HNL: 31.818118,\n            HRK: 8.350332,\n            HTG: 81.510991,\n            HUF: 398.824162,\n            IDR: 19117.779286,\n            ILS: 4.384445,\n            IMP: 1,\n            INR: 95.013395,\n            IQD: 1539.482017,\n            IRR: 54470.49607,\n            ISK: 179.679544,\n            JEP: 1,\n            JMD: 186.95745,\n            JOD: 0.917221,\n            JPY: 136.5158318,\n            KES: 140.545652,\n            KGS: 102.696838,\n            KHR: 5308.625594,\n            KMF: 543.022845,\n            KPW: 1164.31413,\n            KRW: 1486.84855,\n            KWD: 0.395931,\n            KYD: 1.07821,\n            KZT: 554.971966,\n            LAK: 11947.156661,\n            LBP: 1962.516151,\n            LKR: 238.515625,\n            LRD: 255.178847,\n            LSL: 21.306949,\n            LYD: 1.775579,\n            MAD: 11.941335,\n            MDL: 21.845485,\n            MGA: 5051.829644,\n            MKD: 67.838795,\n            MMK: 1657.42841,\n            MNT: 3699.460046,\n            MOP: 10.32793,\n            MRO: 461.844605,\n            MRU: 47.866248,\n            MUR: 51.876663,\n            MVR: 19.92271,\n            MWK: 976.730187,\n            MXN: 27.665983,\n            MYR: 5.358433,\n            MZN: 93.694957,\n            NAD: 21.306949,\n            NGN: 492.892982,\n            NIO: 45.06406,\n            NOK: 11.961539,\n            NPR: 151.782286,\n            NZD: 1.947613,\n            OMR: 0.498023,\n            PAB: 1.293682,\n            PEN: 4.628149,\n            PGK: 4.526926,\n            PHP: 63.060377,\n            PKR: 211.905172,\n            PLN: 4.95131,\n            PYG: 9066.919357,\n            QAR: 4.710297,\n            RON: 5.372792,\n            RSD: 129.575226,\n            RUB: 99.735407,\n            RWF: 1261.340308,\n            SAR: 4.853327,\n            SBD: 10.522089,\n            SCR: 23.422119,\n            SDG: 71.475951,\n            SEK: 11.420678,\n            SGD: 1.760055,\n            SHP: 1,\n            SLL: 12726.600604,\n            SOS: 756.804185,\n            SRD: 18.31078,\n            SSP: 168.515065,\n            STD: 27208.605961,\n            STN: 27.134988,\n            SVC: 11.32088,\n            SYP: 662.796286,\n            SZL: 21.306949,\n            THB: 40.435336,\n            TJS: 13.347587,\n            TMT: 4.540825,\n            TND: 3.560861,\n            TOP: 2.988471,\n            TRY: 10.241113,\n            TTD: 8.746868,\n            TWD: 37.210832,\n            TZS: 3001.343092,\n            UAH: 36.640938,\n            UGX: 4793.525914,\n            USD: 1.293682,\n            UYU: 55.069573,\n            UZS: 13392.297407,\n            VEF: 321464.081229,\n            VES: 581505.354538,\n            VND: 29994.025683,\n            VUV: 146.287579,\n            WST: 3.416005,\n            XAF: 722.946908,\n            XAG: 0.05389226,\n            XAU: 0.00068427,\n            XCD: 3.496241,\n            XDR: 0.914564,\n            XOF: 722.946908,\n            XPD: 0.00055957,\n            XPF: 131.518551,\n            XPT: 0.00148872,\n            YER: 323.873381,\n            ZAR: 21.338437,\n            ZMW: 25.999288,\n            ZWL: 416.565722\n          }\n        }\n      };\n    };\n\n    fetchData();\n  }, [fromCurrency, interval]);\n  useEffect(() => {\n    setToAmount(convertFromTo(toCurrency, fromAmount)); // eslint-disable-next-line\n  }, [rates]);\n  return React.createElement(\"div\", {\n    className: \"exchanger\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 304\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"exchanger__row\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 305\n    },\n    __self: this\n  }, React.createElement(ExchangerRow, {\n    balance: selectedFromCurrency.balance,\n    currency: selectedFromCurrency.code,\n    sign: selectedFromCurrency.sign,\n    amount: fromAmount,\n    info: fromInfo,\n    currencies: currencies,\n    onAmountChange: handleFromAmountChange,\n    onCurrencyChange: handleFromCurrencyChange,\n    alt: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 306\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"exchanger__actions\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 318\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"exchanger__actions-container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 319\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    className: \"exchanger__button exchanger__button--swap\",\n    onClick: handleSwap,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 320\n    },\n    __self: this\n  }), React.createElement(\"button\", {\n    className: \"exchanger__button exchanger__button--rates\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 324\n    },\n    __self: this\n  }, selectedFromCurrency.sign, 1, \" = \", selectedToCurrency.sign, rates && formatRate()), React.createElement(\"div\", {\n    className: \"exchanger__empty-action\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 329\n    },\n    __self: this\n  }))), React.createElement(\"div\", {\n    className: \"exchanger__row\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 332\n    },\n    __self: this\n  }, React.createElement(ExchangerRow, {\n    balance: selectedToCurrency.balance,\n    currency: selectedToCurrency.code,\n    sign: selectedToCurrency.sign,\n    amount: toAmount,\n    info: toInfo,\n    currencies: currencies,\n    onAmountChange: handleToAmountChange,\n    onCurrencyChange: handleToCurrencyChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 333\n    },\n    __self: this\n  })), React.createElement(\"button\", {\n    className: classNames('exchanger__submit-button', {\n      'exchanger__submit-button--enabled': !isExceeding\n    }),\n    disabled: isExceeding,\n    type: \"button\",\n    onClick: handleExchange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 344\n    },\n    __self: this\n  }, \"Exchange\"));\n};\n\nExchanger.whyDidYouRender = {// logOnDifferentValues: true,\n};\nexport default Exchanger;","map":{"version":3,"sources":["/Users/andreu/Documents/Revolut/react-currency-exchange-widget/src/components/Exchanger/Exchanger.js"],"names":["React","useState","useEffect","classNames","useInterval","ExchangerRow","defaultFromCurrency","defaultToCurrency","Exchanger","fromCurrency","setFromCurrency","toCurrency","setToCurrency","interval","rates","setRates","fromAmount","setFromAmount","toAmount","setToAmount","isExceeding","setIsExceeding","fromInfo","setFromInfo","toInfo","setToInfo","currencies","setCurrencies","code","balance","sign","selectedFromCurrency","find","item","selectedToCurrency","convertFromTo","currency","amount","parseFloat","toFixed","convertToFrom","formatRate","handleSwap","handleFromCurrencyChange","console","log","handleToCurrencyChange","handleFromAmountChange","floatAmount","handleToAmountChange","handleExchange","newCurrencies","map","fetchData","data","timestamp","base","AED","AFN","ALL","AMD","ANG","AOA","ARS","AUD","AWG","AZN","BAM","BBD","BDT","BGN","BHD","BIF","BMD","BND","BOB","BRL","BSD","BTC","BTN","BWP","BYN","BZD","CAD","CDF","CHF","CLF","CLP","CNH","CNY","COP","CRC","CUC","CUP","CVE","CZK","DJF","DKK","DOP","DZD","EGP","ERN","ETB","EUR","FJD","FKP","GBP","GEL","GGP","GHS","GIP","GMD","GNF","GTQ","GYD","HKD","HNL","HRK","HTG","HUF","IDR","ILS","IMP","INR","IQD","IRR","ISK","JEP","JMD","JOD","JPY","KES","KGS","KHR","KMF","KPW","KRW","KWD","KYD","KZT","LAK","LBP","LKR","LRD","LSL","LYD","MAD","MDL","MGA","MKD","MMK","MNT","MOP","MRO","MRU","MUR","MVR","MWK","MXN","MYR","MZN","NAD","NGN","NIO","NOK","NPR","NZD","OMR","PAB","PEN","PGK","PHP","PKR","PLN","PYG","QAR","RON","RSD","RUB","RWF","SAR","SBD","SCR","SDG","SEK","SGD","SHP","SLL","SOS","SRD","SSP","STD","STN","SVC","SYP","SZL","THB","TJS","TMT","TND","TOP","TRY","TTD","TWD","TZS","UAH","UGX","USD","UYU","UZS","VEF","VES","VND","VUV","WST","XAF","XAG","XAU","XCD","XDR","XOF","XPD","XPF","XPT","YER","ZAR","ZMW","ZWL","whyDidYouRender"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport classNames from 'classnames';\nimport useInterval from '../../hooks/useInterval';\n// import useFetchRates from '../../hooks/useFetchRates';\nimport ExchangerRow from '../ExchangerRow/ExchangerRow';\nimport './Exchanger.scss';\n\nconst defaultFromCurrency = 'GBP';\nconst defaultToCurrency = 'EUR';\n\nconst Exchanger = () => {\n  const [fromCurrency, setFromCurrency] = useState(defaultFromCurrency);\n  const [toCurrency, setToCurrency] = useState(defaultToCurrency);\n  // const rate = useFetchRates(fromCurrency, toCurrency, useInterval(10000));\n  // const ratesFetched = useFetchRates(0);\n  const interval = useInterval(10000);\n  const [rates, setRates] = useState([]);\n  // const rate = useFetchRates(fromCurrency, toCurrency);\n  // console.log(fromCurrency, toCurrency, rate);\n  const [fromAmount, setFromAmount] = useState(0);\n  const [toAmount, setToAmount] = useState(0);\n  const [isExceeding, setIsExceeding] = useState(false);\n  const [fromInfo, setFromInfo] = useState('');\n  const [toInfo, setToInfo] = useState('');\n  // const [activeCurrency, setActiveCurrency] = useState(defaultFromCurrency);\n  // const [fromRate, setFromRate] = useState(1);\n  // const [toRate, setToRate] = useState(rate);\n\n  const [currencies, setCurrencies] = useState([\n    { code: 'GBP', balance: 10, sign: '£' },\n    { code: 'EUR', balance: 0, sign: '€' },\n    { code: 'USD', balance: 0, sign: '$' },\n  ]);\n\n  const selectedFromCurrency = currencies.find(\n    (item) => item.code === fromCurrency,\n  );\n\n  const selectedToCurrency = currencies.find(\n    (item) => item.code === toCurrency,\n  );\n\n  const convertFromTo = (currency, amount) =>\n    parseFloat((amount * rates[currency]).toFixed(2));\n\n  const convertToFrom = (currency, amount) =>\n    parseFloat((amount / rates[currency]).toFixed(2));\n\n  const formatRate = () => {\n    return rates[toCurrency] ? parseFloat(rates[toCurrency].toFixed(4)) : null;\n  };\n\n  const handleSwap = () => {\n    //   setFromCurrency(toCurrency);\n    //   setToCurrency(fromCurrency);\n    //   setFromAmount(toAmount);\n    //   setToAmount(fromAmount);\n    //   // setFromRate(toRate);\n    //   // setToRate(fromRate);\n  };\n\n  const handleFromCurrencyChange = (currency) => {\n    setFromCurrency(currency);\n    setToInfo(fromAmount > 1000 ? `Fee: ${toAmount * 0.2}` : 'ssss');\n    console.log(fromAmount > 1000);\n    // setToAmount(convertFromTo(currency, fromAmount));\n    // setFromAmount(convertToFrom(toAmount));\n  };\n\n  const handleToCurrencyChange = (currency) => {\n    setToCurrency(currency);\n    setToAmount(convertFromTo(currency, fromAmount));\n    // setFromAmount(convertToFrom(toAmount));\n  };\n\n  const handleFromAmountChange = (amount) => {\n    setFromAmount(amount);\n    setToAmount(convertFromTo(toCurrency, amount));\n\n    const floatAmount = parseFloat(amount);\n    const isExceeding = floatAmount > selectedFromCurrency.balance;\n    setIsExceeding(isExceeding || !floatAmount);\n    setFromInfo(isExceeding ? 'exceeds balance' : '');\n  };\n\n  const handleToAmountChange = (amount) => {\n    setToAmount(amount);\n    setFromAmount(convertToFrom(toCurrency, amount));\n  };\n\n  const handleExchange = () => {\n    const newCurrencies = currencies.map((item) => {\n      if (item.code === fromCurrency) {\n        return { ...item, balance: item.balance - parseFloat(fromAmount) };\n      } else if (item.code === toCurrency) {\n        return { ...item, balance: item.balance + parseFloat(toAmount) };\n      } else {\n        return item;\n      }\n    });\n\n    setCurrencies(newCurrencies);\n    setFromAmount();\n    setToAmount();\n    setIsExceeding(false);\n  };\n\n  useEffect(() => {\n    const fetchData = async () => {\n      // const url = `https://openexchangerates.org/api/latest.json?app_id=81fa12e332b74f45a1de4a276db7c0d1&base=${fromCurrency}`;\n      // const response = await fetch(url);\n      // const data = await response.json();\n      // setRates(data.rates);\n\n      const data = {\n        rates: {\n          timestamp: 1602612000,\n          base: 'GBP',\n          rates: {\n            AED: 4.751695,\n            AFN: 99.548862,\n            ALL: 136.186343,\n            AMD: 623.058422,\n            ANG: 2.322443,\n            AOA: 833.299623,\n            ARS: 100.149049,\n            AUD: 1.808271,\n            AWG: 2.328628,\n            AZN: 2.202494,\n            BAM: 2.146139,\n            BBD: 2.587365,\n            BDT: 109.70939,\n            BGN: 2.154315,\n            BHD: 0.487851,\n            BIF: 2503.27538,\n            BMD: 1.293682,\n            BND: 1.756893,\n            BOB: 8.94028,\n            BRL: 7.216806,\n            BSD: 1.293682,\n            BTC: 0.00011381251,\n            BTN: 94.863652,\n            BWP: 14.811951,\n            BYN: 3.32461,\n            BZD: 2.607961,\n            CAD: 1.699635,\n            CDF: 2154.627983,\n            CHF: 1.183982,\n            CLF: 0.037451,\n            CLP: 1033.392327,\n            CNH: 8.72151,\n            CNY: 8.727958,\n            COP: 4998.788667,\n            CRC: 779.897266,\n            CUC: 1.293721,\n            CUP: 33.312321,\n            CVE: 121.994247,\n            CZK: 30.174365,\n            DJF: 230.334939,\n            DKK: 8.203837,\n            DOP: 75.680418,\n            DZD: 166.903159,\n            EGP: 20.300076,\n            ERN: 19.405025,\n            ETB: 47.827437,\n            EUR: 1.102125,\n            FJD: 2.76848,\n            FKP: 1,\n            GBP: 1,\n            GEL: 4.172126,\n            GGP: 1,\n            GHS: 7.529231,\n            GIP: 1,\n            GMD: 66.973936,\n            GNF: 12632.808316,\n            GTQ: 10.065894,\n            GYD: 270.68286,\n            HKD: 10.026223,\n            HNL: 31.818118,\n            HRK: 8.350332,\n            HTG: 81.510991,\n            HUF: 398.824162,\n            IDR: 19117.779286,\n            ILS: 4.384445,\n            IMP: 1,\n            INR: 95.013395,\n            IQD: 1539.482017,\n            IRR: 54470.49607,\n            ISK: 179.679544,\n            JEP: 1,\n            JMD: 186.95745,\n            JOD: 0.917221,\n            JPY: 136.5158318,\n            KES: 140.545652,\n            KGS: 102.696838,\n            KHR: 5308.625594,\n            KMF: 543.022845,\n            KPW: 1164.31413,\n            KRW: 1486.84855,\n            KWD: 0.395931,\n            KYD: 1.07821,\n            KZT: 554.971966,\n            LAK: 11947.156661,\n            LBP: 1962.516151,\n            LKR: 238.515625,\n            LRD: 255.178847,\n            LSL: 21.306949,\n            LYD: 1.775579,\n            MAD: 11.941335,\n            MDL: 21.845485,\n            MGA: 5051.829644,\n            MKD: 67.838795,\n            MMK: 1657.42841,\n            MNT: 3699.460046,\n            MOP: 10.32793,\n            MRO: 461.844605,\n            MRU: 47.866248,\n            MUR: 51.876663,\n            MVR: 19.92271,\n            MWK: 976.730187,\n            MXN: 27.665983,\n            MYR: 5.358433,\n            MZN: 93.694957,\n            NAD: 21.306949,\n            NGN: 492.892982,\n            NIO: 45.06406,\n            NOK: 11.961539,\n            NPR: 151.782286,\n            NZD: 1.947613,\n            OMR: 0.498023,\n            PAB: 1.293682,\n            PEN: 4.628149,\n            PGK: 4.526926,\n            PHP: 63.060377,\n            PKR: 211.905172,\n            PLN: 4.95131,\n            PYG: 9066.919357,\n            QAR: 4.710297,\n            RON: 5.372792,\n            RSD: 129.575226,\n            RUB: 99.735407,\n            RWF: 1261.340308,\n            SAR: 4.853327,\n            SBD: 10.522089,\n            SCR: 23.422119,\n            SDG: 71.475951,\n            SEK: 11.420678,\n            SGD: 1.760055,\n            SHP: 1,\n            SLL: 12726.600604,\n            SOS: 756.804185,\n            SRD: 18.31078,\n            SSP: 168.515065,\n            STD: 27208.605961,\n            STN: 27.134988,\n            SVC: 11.32088,\n            SYP: 662.796286,\n            SZL: 21.306949,\n            THB: 40.435336,\n            TJS: 13.347587,\n            TMT: 4.540825,\n            TND: 3.560861,\n            TOP: 2.988471,\n            TRY: 10.241113,\n            TTD: 8.746868,\n            TWD: 37.210832,\n            TZS: 3001.343092,\n            UAH: 36.640938,\n            UGX: 4793.525914,\n            USD: 1.293682,\n            UYU: 55.069573,\n            UZS: 13392.297407,\n            VEF: 321464.081229,\n            VES: 581505.354538,\n            VND: 29994.025683,\n            VUV: 146.287579,\n            WST: 3.416005,\n            XAF: 722.946908,\n            XAG: 0.05389226,\n            XAU: 0.00068427,\n            XCD: 3.496241,\n            XDR: 0.914564,\n            XOF: 722.946908,\n            XPD: 0.00055957,\n            XPF: 131.518551,\n            XPT: 0.00148872,\n            YER: 323.873381,\n            ZAR: 21.338437,\n            ZMW: 25.999288,\n            ZWL: 416.565722,\n          },\n        },\n      };\n    };\n    fetchData();\n  }, [fromCurrency, interval]);\n\n  useEffect(() => {\n    setToAmount(convertFromTo(toCurrency, fromAmount));\n    // eslint-disable-next-line\n  }, [rates]);\n\n  return (\n    <div className=\"exchanger\">\n      <div className=\"exchanger__row\">\n        <ExchangerRow\n          balance={selectedFromCurrency.balance}\n          currency={selectedFromCurrency.code}\n          sign={selectedFromCurrency.sign}\n          amount={fromAmount}\n          info={fromInfo}\n          currencies={currencies}\n          onAmountChange={handleFromAmountChange}\n          onCurrencyChange={handleFromCurrencyChange}\n          alt\n        />\n      </div>\n      <div className=\"exchanger__actions\">\n        <div className=\"exchanger__actions-container\">\n          <button\n            className=\"exchanger__button exchanger__button--swap\"\n            onClick={handleSwap}\n          />\n          <button className=\"exchanger__button exchanger__button--rates\">\n            {selectedFromCurrency.sign}\n            {1} = {selectedToCurrency.sign}\n            {rates && formatRate()}\n          </button>\n          <div className=\"exchanger__empty-action\" />\n        </div>\n      </div>\n      <div className=\"exchanger__row\">\n        <ExchangerRow\n          balance={selectedToCurrency.balance}\n          currency={selectedToCurrency.code}\n          sign={selectedToCurrency.sign}\n          amount={toAmount}\n          info={toInfo}\n          currencies={currencies}\n          onAmountChange={handleToAmountChange}\n          onCurrencyChange={handleToCurrencyChange}\n        />\n      </div>\n      <button\n        className={classNames('exchanger__submit-button', {\n          'exchanger__submit-button--enabled': !isExceeding,\n        })}\n        disabled={isExceeding}\n        type=\"button\"\n        onClick={handleExchange}\n      >\n        Exchange\n      </button>\n    </div>\n  );\n};\n\nExchanger.whyDidYouRender = {\n  // logOnDifferentValues: true,\n};\n\nexport default Exchanger;\n"]},"metadata":{},"sourceType":"module"}