{"ast":null,"code":"var _jsxFileName = \"/Users/andreu/Documents/Revolut/react-currency-exchange-widget/src/components/Exchanger/Exchanger.js\";\nimport React, { useState, useEffect } from 'react';\nimport classNames from 'classnames';\nimport useInterval from '../../hooks/useInterval'; // import useFetchRates from '../../hooks/useFetchRates';\n\nimport ExchangerRow from '../ExchangerRow/ExchangerRow';\nimport ExchangerBar from '../ExchangerBar/ExchangerBar';\nimport './Exchanger.scss';\nconst DEFAULT_FROM_CURRENCY = 'GBP';\nconst DEFAULT_TO_CURRENCY = 'EUR';\nconst EXCHANGE_FEE = 0.005;\nconst MIMIMUM_AMOUNT = 0.1;\nconst ALLOWANCE_LIMIT = 1000;\nconst FETCH_INTERVAL = 10000000; //10000;\n\nconst useBalances = () => {\n  const fetch = () => [{\n    code: 'GBP',\n    balance: '10',\n    sign: '£'\n  }, {\n    code: 'EUR',\n    balance: '0',\n    sign: '€'\n  }, {\n    code: 'USD',\n    balance: '0',\n    sign: '$'\n  }];\n\n  const convertFromTo = (amount, rate) => {\n    const conversion = ((amount || 0) * rate).toFixed(2); // eslint-disable-next-line\n\n    return conversion == 0 ? '' : conversion;\n  };\n\n  const convertToFrom = (amount, rate) => {\n    const conversion = ((amount || 0) / rate).toFixed(2); // eslint-disable-next-line\n\n    return conversion != 0 ? '' : conversion;\n  };\n\n  const calculate = (amount, balance, sign) => {\n    const floatAmount = parseFloat(amount);\n    const fee = (floatAmount * EXCHANGE_FEE).toFixed(2);\n    const isAmountExceeding = floatAmount > parseFloat(balance);\n    const isMinAmountReached = !amount || floatAmount >= MIMIMUM_AMOUNT;\n    const isFeeInvolved = floatAmount > ALLOWANCE_LIMIT;\n    const isAllowedToExchange = isAmountExceeding || !isMinAmountReached || !amount;\n    const feeInfo = `Fee: ${sign}${fee}`;\n    const exceedInfo = 'exceeds balance';\n    const minInfo = `minimum amount is ${sign}${MIMIMUM_AMOUNT.toFixed(2)}`;\n    const toInfo = isFeeInvolved ? feeInfo : '';\n    const fromInfo = !isMinAmountReached ? minInfo : isAmountExceeding ? exceedInfo : '';\n    return {\n      isAllowedToExchange,\n      fromInfo,\n      toInfo\n    };\n  };\n\n  const exchange = (balances, fromCurrency, toCurrency, fromAmount, toAmount) => {\n    const newBalances = balances.map(item => {\n      if (item.code === fromCurrency) {\n        const newBalance = parseFloat(item.balance) - parseFloat(fromAmount);\n        return { ...item,\n          balance: newBalance.toFixed(2)\n        };\n      } else if (item.code === toCurrency) {\n        const newBalance = parseFloat(item.balance) + parseFloat(toAmount);\n        return { ...item,\n          balance: newBalance.toFixed(2)\n        };\n      } else {\n        return item;\n      }\n    });\n    return newBalances;\n  };\n\n  return {\n    convertFromTo,\n    convertToFrom,\n    calculate,\n    exchange,\n    fetch\n  };\n};\n\nconst Exchanger = () => {\n  const balances = useBalances();\n  const [fromCurrency, setFromCurrency] = useState(DEFAULT_FROM_CURRENCY);\n  const [toCurrency, setToCurrency] = useState(DEFAULT_TO_CURRENCY);\n  const interval = useInterval(FETCH_INTERVAL);\n  const [rates, setRates] = useState(null);\n  const [fromAmount, setFromAmount] = useState();\n  const [toAmount, setToAmount] = useState();\n  const [isExceeding, setIsExceeding] = useState(true);\n  const [fromInfo, setFromInfo] = useState('');\n  const [toInfo, setToInfo] = useState('');\n  const [currencies, setCurrencies] = useState(balances.fetch());\n  const selectedFromCurrency = currencies.find(c => c.code === fromCurrency);\n  const selectedToCurrency = currencies.find(c => c.code === toCurrency);\n\n  const convertFromTo = (currency, amount) => rates ? balances.convertFromTo(amount, rates[currency]) : '';\n\n  const convertToFrom = (currency, amount) => rates ? balances.convertToFrom(amount, rates[currency]) : '';\n\n  const calculate = (amount, currency) => {\n    const {\n      isAllowedToExchange,\n      fromInfo,\n      toInfo\n    } = balances.calculate(amount, currency.balance, currency.sign);\n    setIsExceeding(isAllowedToExchange);\n    setFromInfo(fromInfo);\n    setToInfo(toInfo);\n  };\n\n  const handleSwap = () => {\n    setFromCurrency(toCurrency);\n    setToCurrency(fromCurrency);\n    setFromAmount(toAmount);\n    setToAmount(fromAmount);\n    calculate(toAmount, selectedToCurrency);\n  };\n\n  const handleFromCurrencyChange = currency => {\n    if (currency === toCurrency) {\n      setToCurrency(fromCurrency);\n      calculate(toAmount, selectedToCurrency);\n    }\n\n    setFromCurrency(currency);\n  };\n\n  const handleToCurrencyChange = currency => {\n    if (currency === fromCurrency) {\n      setFromCurrency(toCurrency);\n      calculate(toAmount, selectedToCurrency);\n    }\n\n    setToCurrency(currency);\n    setToAmount(convertFromTo(currency, fromAmount));\n  };\n\n  const handleFromAmountChange = amount => {\n    setFromAmount(amount);\n    setToAmount(convertFromTo(toCurrency, amount));\n    calculate(amount, selectedFromCurrency);\n  };\n\n  const handleToAmountChange = amount => {\n    setToAmount(amount);\n    setFromAmount(convertToFrom(toCurrency, amount));\n    calculate(amount, selectedFromCurrency);\n  };\n\n  const handleExchange = () => {\n    const newCurrencies = balances.exchange(currencies, fromCurrency, toCurrency, fromAmount, toAmount);\n    setCurrencies(newCurrencies);\n    setFromAmount();\n    setToAmount();\n    setIsExceeding(false);\n  };\n\n  useEffect(() => {\n    const fetchData = async () => {\n      const url = `https://openexchangerates.org/api/latest.json?app_id=81fa12e332b74f45a1de4a276db7c0d1&base=${fromCurrency}`;\n      const response = await fetch(url);\n      const data = await response.json();\n      setRates(data.rates);\n    };\n\n    fetchData();\n  }, [fromCurrency, interval]);\n  useEffect(() => {\n    setToAmount(convertFromTo(toCurrency, fromAmount)); // eslint-disable-next-line\n  }, [rates]);\n  return React.createElement(\"div\", {\n    className: \"exchanger\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 193\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"exchanger__row\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 194\n    },\n    __self: this\n  }, React.createElement(ExchangerRow, {\n    balance: selectedFromCurrency.balance,\n    currency: selectedFromCurrency.code,\n    sign: selectedFromCurrency.sign,\n    amount: fromAmount,\n    info: fromInfo,\n    currencies: currencies,\n    onAmountChange: handleFromAmountChange,\n    onCurrencyChange: handleFromCurrencyChange,\n    autoFocus: true,\n    alt: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 195\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"exchanger__bar\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 208\n    },\n    __self: this\n  }, React.createElement(ExchangerBar, {\n    onSwap: handleSwap,\n    fromSign: selectedFromCurrency.sign,\n    toSign: selectedToCurrency.sign,\n    rate: rates && rates[toCurrency],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 209\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"exchanger__row\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 216\n    },\n    __self: this\n  }, React.createElement(ExchangerRow, {\n    balance: selectedToCurrency.balance,\n    currency: selectedToCurrency.code,\n    sign: selectedToCurrency.sign,\n    amount: toAmount,\n    info: toInfo,\n    currencies: currencies,\n    onAmountChange: handleToAmountChange,\n    onCurrencyChange: handleToCurrencyChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 217\n    },\n    __self: this\n  })), React.createElement(\"button\", {\n    className: classNames('exchanger__submit-button', {\n      'exchanger__submit-button--enabled': !isExceeding\n    }),\n    disabled: isExceeding,\n    type: \"button\",\n    onClick: handleExchange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 228\n    },\n    __self: this\n  }, \"Exchange\"));\n};\n\nExchanger.whyDidYouRender = {// logOnDifferentValues: true,\n};\nexport default Exchanger;","map":{"version":3,"sources":["/Users/andreu/Documents/Revolut/react-currency-exchange-widget/src/components/Exchanger/Exchanger.js"],"names":["React","useState","useEffect","classNames","useInterval","ExchangerRow","ExchangerBar","DEFAULT_FROM_CURRENCY","DEFAULT_TO_CURRENCY","EXCHANGE_FEE","MIMIMUM_AMOUNT","ALLOWANCE_LIMIT","FETCH_INTERVAL","useBalances","fetch","code","balance","sign","convertFromTo","amount","rate","conversion","toFixed","convertToFrom","calculate","floatAmount","parseFloat","fee","isAmountExceeding","isMinAmountReached","isFeeInvolved","isAllowedToExchange","feeInfo","exceedInfo","minInfo","toInfo","fromInfo","exchange","balances","fromCurrency","toCurrency","fromAmount","toAmount","newBalances","map","item","newBalance","Exchanger","setFromCurrency","setToCurrency","interval","rates","setRates","setFromAmount","setToAmount","isExceeding","setIsExceeding","setFromInfo","setToInfo","currencies","setCurrencies","selectedFromCurrency","find","c","selectedToCurrency","currency","handleSwap","handleFromCurrencyChange","handleToCurrencyChange","handleFromAmountChange","handleToAmountChange","handleExchange","newCurrencies","fetchData","url","response","data","json","whyDidYouRender"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport classNames from 'classnames';\nimport useInterval from '../../hooks/useInterval';\n// import useFetchRates from '../../hooks/useFetchRates';\nimport ExchangerRow from '../ExchangerRow/ExchangerRow';\nimport ExchangerBar from '../ExchangerBar/ExchangerBar';\n\nimport './Exchanger.scss';\n\nconst DEFAULT_FROM_CURRENCY = 'GBP';\nconst DEFAULT_TO_CURRENCY = 'EUR';\nconst EXCHANGE_FEE = 0.005;\nconst MIMIMUM_AMOUNT = 0.1;\nconst ALLOWANCE_LIMIT = 1000;\nconst FETCH_INTERVAL = 10000000; //10000;\n\nconst useBalances = () => {\n  const fetch = () => [\n    { code: 'GBP', balance: '10', sign: '£' },\n    { code: 'EUR', balance: '0', sign: '€' },\n    { code: 'USD', balance: '0', sign: '$' },\n  ];\n\n  const convertFromTo = (amount, rate) => {\n    const conversion = ((amount || 0) * rate).toFixed(2);\n    // eslint-disable-next-line\n    return conversion == 0 ? '' : conversion;\n  };\n\n  const convertToFrom = (amount, rate) => {\n    const conversion = ((amount || 0) / rate).toFixed(2);\n    // eslint-disable-next-line\n    return conversion != 0 ? '' : conversion;\n  };\n\n  const calculate = (amount, balance, sign) => {\n    const floatAmount = parseFloat(amount);\n    const fee = (floatAmount * EXCHANGE_FEE).toFixed(2);\n    const isAmountExceeding = floatAmount > parseFloat(balance);\n    const isMinAmountReached = !amount || floatAmount >= MIMIMUM_AMOUNT;\n    const isFeeInvolved = floatAmount > ALLOWANCE_LIMIT;\n    const isAllowedToExchange =\n      isAmountExceeding || !isMinAmountReached || !amount;\n    const feeInfo = `Fee: ${sign}${fee}`;\n    const exceedInfo = 'exceeds balance';\n    const minInfo = `minimum amount is ${sign}${MIMIMUM_AMOUNT.toFixed(2)}`;\n    const toInfo = isFeeInvolved ? feeInfo : '';\n    const fromInfo = !isMinAmountReached\n      ? minInfo\n      : isAmountExceeding\n      ? exceedInfo\n      : '';\n\n    return { isAllowedToExchange, fromInfo, toInfo };\n  };\n\n  const exchange = (\n    balances,\n    fromCurrency,\n    toCurrency,\n    fromAmount,\n    toAmount,\n  ) => {\n    const newBalances = balances.map((item) => {\n      if (item.code === fromCurrency) {\n        const newBalance = parseFloat(item.balance) - parseFloat(fromAmount);\n        return { ...item, balance: newBalance.toFixed(2) };\n      } else if (item.code === toCurrency) {\n        const newBalance = parseFloat(item.balance) + parseFloat(toAmount);\n        return { ...item, balance: newBalance.toFixed(2) };\n      } else {\n        return item;\n      }\n    });\n\n    return newBalances;\n  };\n\n  return {\n    convertFromTo,\n    convertToFrom,\n    calculate,\n    exchange,\n    fetch,\n  };\n};\n\nconst Exchanger = () => {\n  const balances = useBalances();\n  const [fromCurrency, setFromCurrency] = useState(DEFAULT_FROM_CURRENCY);\n  const [toCurrency, setToCurrency] = useState(DEFAULT_TO_CURRENCY);\n  const interval = useInterval(FETCH_INTERVAL);\n  const [rates, setRates] = useState(null);\n  const [fromAmount, setFromAmount] = useState();\n  const [toAmount, setToAmount] = useState();\n  const [isExceeding, setIsExceeding] = useState(true);\n  const [fromInfo, setFromInfo] = useState('');\n  const [toInfo, setToInfo] = useState('');\n  const [currencies, setCurrencies] = useState(balances.fetch());\n\n  const selectedFromCurrency = currencies.find((c) => c.code === fromCurrency);\n  const selectedToCurrency = currencies.find((c) => c.code === toCurrency);\n\n  const convertFromTo = (currency, amount) =>\n    rates ? balances.convertFromTo(amount, rates[currency]) : '';\n\n  const convertToFrom = (currency, amount) =>\n    rates ? balances.convertToFrom(amount, rates[currency]) : '';\n\n  const calculate = (amount, currency) => {\n    const { isAllowedToExchange, fromInfo, toInfo } = balances.calculate(\n      amount,\n      currency.balance,\n      currency.sign,\n    );\n\n    setIsExceeding(isAllowedToExchange);\n    setFromInfo(fromInfo);\n    setToInfo(toInfo);\n  };\n\n  const handleSwap = () => {\n    setFromCurrency(toCurrency);\n    setToCurrency(fromCurrency);\n    setFromAmount(toAmount);\n    setToAmount(fromAmount);\n    calculate(toAmount, selectedToCurrency);\n  };\n\n  const handleFromCurrencyChange = (currency) => {\n    if (currency === toCurrency) {\n      setToCurrency(fromCurrency);\n      calculate(toAmount, selectedToCurrency);\n    }\n\n    setFromCurrency(currency);\n  };\n\n  const handleToCurrencyChange = (currency) => {\n    if (currency === fromCurrency) {\n      setFromCurrency(toCurrency);\n      calculate(toAmount, selectedToCurrency);\n    }\n\n    setToCurrency(currency);\n    setToAmount(convertFromTo(currency, fromAmount));\n  };\n\n  const handleFromAmountChange = (amount) => {\n    setFromAmount(amount);\n    setToAmount(convertFromTo(toCurrency, amount));\n    calculate(amount, selectedFromCurrency);\n  };\n\n  const handleToAmountChange = (amount) => {\n    setToAmount(amount);\n    setFromAmount(convertToFrom(toCurrency, amount));\n    calculate(amount, selectedFromCurrency);\n  };\n\n  const handleExchange = () => {\n    const newCurrencies = balances.exchange(\n      currencies,\n      fromCurrency,\n      toCurrency,\n      fromAmount,\n      toAmount,\n    );\n\n    setCurrencies(newCurrencies);\n    setFromAmount();\n    setToAmount();\n    setIsExceeding(false);\n  };\n\n  useEffect(() => {\n    const fetchData = async () => {\n      const url = `https://openexchangerates.org/api/latest.json?app_id=81fa12e332b74f45a1de4a276db7c0d1&base=${fromCurrency}`;\n      const response = await fetch(url);\n      const data = await response.json();\n      setRates(data.rates);\n    };\n\n    fetchData();\n  }, [fromCurrency, interval]);\n\n  useEffect(() => {\n    setToAmount(convertFromTo(toCurrency, fromAmount));\n    // eslint-disable-next-line\n  }, [rates]);\n\n  return (\n    <div className=\"exchanger\">\n      <div className=\"exchanger__row\">\n        <ExchangerRow\n          balance={selectedFromCurrency.balance}\n          currency={selectedFromCurrency.code}\n          sign={selectedFromCurrency.sign}\n          amount={fromAmount}\n          info={fromInfo}\n          currencies={currencies}\n          onAmountChange={handleFromAmountChange}\n          onCurrencyChange={handleFromCurrencyChange}\n          autoFocus\n          alt\n        />\n      </div>\n      <div className=\"exchanger__bar\">\n        <ExchangerBar\n          onSwap={handleSwap}\n          fromSign={selectedFromCurrency.sign}\n          toSign={selectedToCurrency.sign}\n          rate={rates && rates[toCurrency]}\n        />\n      </div>\n      <div className=\"exchanger__row\">\n        <ExchangerRow\n          balance={selectedToCurrency.balance}\n          currency={selectedToCurrency.code}\n          sign={selectedToCurrency.sign}\n          amount={toAmount}\n          info={toInfo}\n          currencies={currencies}\n          onAmountChange={handleToAmountChange}\n          onCurrencyChange={handleToCurrencyChange}\n        />\n      </div>\n      <button\n        className={classNames('exchanger__submit-button', {\n          'exchanger__submit-button--enabled': !isExceeding,\n        })}\n        disabled={isExceeding}\n        type=\"button\"\n        onClick={handleExchange}\n      >\n        Exchange\n      </button>\n    </div>\n  );\n};\n\nExchanger.whyDidYouRender = {\n  // logOnDifferentValues: true,\n};\n\nexport default Exchanger;\n"]},"metadata":{},"sourceType":"module"}